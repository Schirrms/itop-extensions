<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2">
	<constants>
	</constants>
	<classes>
		<class id="UserRequest">
			<methods>
				<method id="GetAttributeFlags" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
						// 不允许用户修改工单描述，修改内容应放在public_log里
						// 工单描述在账号申请工单里用来为action-shell-exec传递参数
						public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
						{
							if(!$this->IsNew() && $sAttCode=="description")
							{
								return OPT_ATT_READONLY;
							}else{
								return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
							}
						}
					]]></code>
				</method>
			</methods>
		</class>
		<class id="lnkUserToServer" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkusertoserver</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="user_id"/>
						<attribute id="server_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon _delta="define">../custom-pages/images/lnkusertoserver.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="user_id"/>
						<attribute id="server_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="user_id" xsi:type="AttributeExternalKey">
					<sql>user_id</sql>
					<target_class>User</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="user_name" xsi:type="AttributeExternalField">
					<extkey_attcode>user_id</extkey_attcode>
					<target_attcode>login</target_attcode>
				</field>
				<field id="user_contactid" xsi:type="AttributeExternalField">
					<extkey_attcode>user_id</extkey_attcode>
					<target_attcode>contactid</target_attcode>
				</field>
				<field id="user_email" xsi:type="AttributeExternalField">
					<extkey_attcode>user_id</extkey_attcode>
					<target_attcode>email</target_attcode>
				</field>
				<field id="user_status" xsi:type="AttributeExternalField">
					<extkey_attcode>user_id</extkey_attcode>
					<target_attcode>status</target_attcode>
				</field>
				<field id="status" xsi:type="AttributeEnum">
					<sql>status</sql>
					<values>
						<value id="disabled">disabled</value>
						<value id="enabled">enabled</value>
					</values>
					<default_value>disabled</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="server_id" xsi:type="AttributeExternalKey">
					<sql>server_id</sql>
					<target_class>Server</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="server_ip" xsi:type="AttributeExternalField">
					<extkey_attcode>server_id</extkey_attcode>
					<target_attcode>all_ip</target_attcode>
				</field>
				<field id="sudo" xsi:type="AttributeEnum">
					<sql>sudo</sql>
					<values>
						<value id="yes">yes</value>
						<value id="no">no</value>
					</values>
					<default_value>no</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="expiration" xsi:type="AttributeDateTime">
					<sql>expiration</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
						public function DoCheckToWrite()
						{
							parent::DoCheckToWrite();
							// 填充expiration字段
							$expiration = $this->Get("expiration");
							$day = (int)MetaModel::GetModuleSetting('le-config-mgmt', 'user_expiration_day', 3);
							if($expiration == "")
							{
								$this->Set("expiration", time()+$day*24*60*60);
							}
							
							$aChanges = $this->ListChanges();
							
							if($aChanges)
							{
								if(!$this->IsNew() && !array_key_exists('user_id', $aChanges) && !array_key_exists('server_id', $aChanges))
								{
									return;
								}
								// 直接取 Get('friendlyname')取不到  lnkContactToApplicationSolution中也是这样处理的
								$friendlyname = $this->Get('user_id') . " " . $this->Get('server_id');
								$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkUserToServer WHERE friendlyname=:friendlyname");
								$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));
								if ($oSet->Count() > 0)
								{
									$this->m_aCheckIssues[] = Dict::Format("Class:lnkUserToServer/Error:ThisLnkAlreadyExists", $friendlyname);
								}								
							}
						}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="user_id">
							<rank>10</rank>
						</item>
						<item id="server_id">
							<rank>20</rank>
						</item>
						<item id="user_status">
							<rank>30</rank>
						</item>
						<item id="status">
							<rank>35</rank>
						</item>
						<item id="sudo">
							<rank>40</rank>
						</item>
						<item id="expiration">
							<rank>50</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="user_id">
							<rank>10</rank>
						</item>
						<item id="server_id">
							<rank>20</rank>
						</item>
						<item id="user_email">
							<rank>30</rank>
						</item>
						<item id="user_status">
							<rank>35</rank>
						</item>
						<item id="status">
							<rank>36</rank>
						</item>						
						<item id="server_ip">
							<rank>40</rank>
						</item>
						<item id="sudo">
							<rank>50</rank>
						</item>
						<item id="expiration">
							<rank>60</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="user_id">
							<rank>10</rank>
						</item>
						<item id="server_id">
							<rank>20</rank>
						</item>
						<item id="user_status">
							<rank>95</rank>
						</item>
						<item id="status">
							<rank>36</rank>
						</item>						
						<item id="server_ip">
							<rank>40</rank>
						</item>
						<item id="sudo">
							<rank>50</rank>
						</item>
						<item id="expiration">
							<rank>60</rank>
						</item>						
					</items>
				</list>
			</presentation>
		</class>	
	</classes>
	<menus>
		<menu id="WelcomeBatchQuery" xsi:type="WebPageMenuNode" _delta="define">
			<rank>21</rank>
			<parent>WelcomeMenu</parent>
			<url>$env-production/custom-pages/batch_query.php</url>
		</menu>
		<menu id="WelcomeServerAccount" xsi:type="WebPageMenuNode" _delta="define">
			<rank>21</rank>
			<parent>WelcomeMenu</parent>
			<url>$env-production/custom-pages/server_accounts.php</url>
		</menu>		
	</menus>
	<user_rights>
		<groups>
		</groups>
		<profiles>
		</profiles>
	</user_rights>
</itop_design>

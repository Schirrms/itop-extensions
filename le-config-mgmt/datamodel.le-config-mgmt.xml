<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2">
	<constants>
	</constants>
	<classes>
		<class id="VLAN" _delta="delete"></class>
		<class id="lnkSubnetToVLAN" _delta="delete"></class>
		<class id="Subnet" _delta="delete"></class>
		<class id="lnkPhysicalInterfaceToVLAN" _delta="delete"></class>
		<class id="Patch" _delta="delete"></class>
		<class id="lnkDocumentToPatch" _delta="delete"></class>
		<class id="lnkSoftwareInstanceToSoftwarePatch" _delta="delete"></class>
		<class id="lnkFunctionalCIToOSPatch" _delta="delete"></class>
		<class id="Middleware" _delta="delete"></class>
		<class id="PCSoftware" _delta="delete"></class>
		<class id="OtherSoftware" _delta="delete"></class>
		<class id="MiddlewareInstance" _delta="delete"></class>
		<class id="DatabaseSchema" _delta="delete"></class>
		<class id="Licence" _delta="delete"></class>
		<class id="lnkDocumentToLicence" _delta="delete"></class>
		<class id="Software" _delta="delete"></class>
		<class id="WebServer" _delta="delete"></class>
		<class id="SoftwareInstance" _delta="delete"></class>
		<class id="lnkDocumentToSoftware" _delta="delete"></class>
		<class id="WebApplication" _delta="delete"></class>
		<class id="IOSVersion" _delta="delete"></class>
		<class id="PhysicalInterface" _delta="delete"></class>
		<class id="IPInterface" _delta="delete"></class>
		<class id="NetworkInterface" _delta="delete"></class>
		<class id="NetworkDevice" _delta="delete"></class>
		<class id="lnkConnectableCIToNetworkDevice" _delta="delete"></class>

		<class id="FunctionalCI">
			<fields>
				<field id="name" xsi:type="AttributeString" _delta="redefine">
					<sql>name</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>

			</fields>
			<relations>
				<relation id="impacts">
					<neighbours>
						<neighbour id="softwareinstance" _delta="delete">
							<attribute>softwares_list</attribute>
						</neighbour>
					</neighbours>
				</relation>
			</relations>
		</class>

		<class id="PhysicalDevice">
			<fields>
				<field id="serialnumber" xsi:type="AttributeString" _delta="redefine">
					<sql>serialnumber</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
				</field>
			</fields>

		</class>
		<class id="Server">
			<properties>
				<naming>
					<attributes>
						<attribute id="name" _delta="delete"></attribute>
						<attribute id="serialnumber"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/server.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="serialnumber"/>
						<attribute id="org_id"/>
						<attribute id="organization_name"/>
					</attributes>
				</reconciliation>
			</properties>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[       public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// serialnumber has to be unique! Currently it' not possible to define this in datamodel (xml)
					$aChanges = $this->ListChanges();
					if (array_key_exists('serialnumber', $aChanges))
					{
						$sServer = $aChanges['serialnumber'];
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT Server WHERE serialnumber=:serialnumber");
						$oSet = new DBObjectSet($oSearch, array(), array('serialnumber' => $sServer));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:Server/Error:ServerMustBeUnique', $sServer);
						}
					}         
				}]]></code>
				</method>

			</methods>

			<presentation>
				<details>
					<items>
						<item id="col:col1">
							<rank>120</rank>
							<items>
								<item id="fieldset:Server:baseinfo" _delta="redefine">
									<rank>10</rank>
									<items>
										<item id="serialnumber">
											<rank>10</rank>
										</item>
										<item id="name">
											<rank>20</rank>
										</item>
										<item id="org_id">
											<rank>30</rank>
										</item>
										<item id="status">
											<rank>40</rank>
										</item>
										<item id="business_criticity">
											<rank>50</rank>
										</item>
										<item id="location_id">
											<rank>60</rank>
										</item>
										<item id="rack_id">
											<rank>70</rank>
										</item>

										<item id="cpu">
											<rank>80</rank>
										</item>
										<item id="ram">
											<rank>90</rank>
										</item>

									</items>
								</item>
								<item id="fieldset:Server:moreinfo" _delta="redefine">
									<rank>20</rank>
									<items>
										<item id="brand_id">
											<rank>10</rank>
										</item>
										<item id="model_id">
											<rank>20</rank>
										</item>
										<item id="osfamily_id">
											<rank>30</rank>
										</item>
										<item id="osversion_id">
											<rank>40</rank>
										</item>
										<item id="managementip">
											<rank>45</rank>
										</item>
										<item id="oslicence_id">
											<rank>50</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="col:col2">
							<rank>130</rank>
							<items>
								<item id="fieldset:Server:Date">
									<rank>10</rank>
									<items>
										<item id="move2production">
											<rank>10</rank>
										</item>
										<item id="purchase_date">
											<rank>20</rank>
										</item>
										<item id="end_of_warranty">
											<rank>30</rank>
										</item>
									</items>
								</item>
								<item id="fieldset:Server:power" _delta="delete"></item>

								<item id="fieldset:Server:otherinfo">
									<rank>30</rank>
									<items>
										<item id="description">
											<rank>10</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search _delta="redefine">
					<items>
						<item id="serialnumber">
							<rank>1</rank>
						</item>

						<item id="name">
							<rank>20</rank>
						</item>
						<item id="org_id">
							<rank>30</rank>
						</item>
						<item id="status">
							<rank>40</rank>
						</item>
						<item id="business_criticity">
							<rank>50</rank>
						</item>
						<item id="location_id">
							<rank>51</rank>
						</item>
						<item id="managementip">
							<rank>55</rank>
						</item>
						<item id="brand_id">
							<rank>60</rank>
						</item>
						<item id="model_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>120</rank>
						</item>
					</items>
				</search>
				<list _delta="redefine">
					<items>
						<item id="name">
							<rank>1</rank>
						</item>
						<item id="cpu">
							<rank>3</rank>
						</item>
						<item id="ram">
							<rank>5</rank>
						</item>

						<item id="status">
							<rank>21</rank>
						</item>

						<item id="location_id">
							<rank>40</rank>
						</item>
						<item id="brand_id">
							<rank>50</rank>
						</item>
						<item id="model_id">
							<rank>60</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="IPAddress" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>ipaddress</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="ipaddress"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/interface.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="ipaddress"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="ipaddress" xsi:type="AttributeIPAddress">
					<sql>ipaddress</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="comment" xsi:type="AttributeText">
					<sql>comment</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods></methods>
			<presentation>
				<details>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="PhysicalIP" _delta="define">
			<parent>IPAddress</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>physicalip</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="ipaddress"/>
						<attribute id="connectableci_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/interface.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="ipaddress"/>
						<attribute id="connectableci_id"/>
						<attribute id="connectableci_name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="connectableci_id" xsi:type="AttributeExternalKey">
					<sql>connectableci_id</sql>
					<target_class>ConnectableCI</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="connectableci_name" xsi:type="AttributeExternalField">
					<extkey_attcode>connectableci_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[       public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// ipaddress has to be unique! Currently it' not possible to define this in datamodel (xml)
					$aChanges = $this->ListChanges();
					if (array_key_exists('ipaddress', $aChanges))
					{
						$sPhysicalIP = $aChanges['ipaddress'];
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT PhysicalIP WHERE ipaddress=:ipaddress");
						$oSet = new DBObjectSet($oSearch, array(), array('ipaddress' => $sPhysicalIP));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:PhysicalIP/Error:PhysicalIPMustBeUnique', $sPhysicalIP);
						}
					}         
				}]]></code>
				</method>

			</methods>
			
			<presentation>
				<details>
					<items>
						<item id="connectableci_id">
							<rank>20</rank>
						</item>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>50</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>30</rank>
						</item>
					</items>
				</list>
			</presentation>			
		</class>

		<class id="VirtualIP" _delta="define">
			<parent>IPAddress</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>virtualip</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="ipaddress"/>
						<attribute id="connectableci_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/interface.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="ipaddress"/>
						<attribute id="connectableci_id"/>
						<attribute id="connectableci_name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="connectableci_id" xsi:type="AttributeExternalKey">
					<sql>connectableci_id</sql>
					<target_class>ConnectableCI</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="connectableci_name" xsi:type="AttributeExternalField">
					<extkey_attcode>connectableci_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[       public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// ipaddress has to be unique! Currently it' not possible to define this in datamodel (xml)
					$aChanges = $this->ListChanges();
					if (array_key_exists('ipaddress', $aChanges))
					{
						$sVirtualIP = $aChanges['ipaddress'];
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT VirtualIP WHERE ipaddress=:ipaddress");
						$oSet = new DBObjectSet($oSearch, array(), array('ipaddress' => $sVirtualIP));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:VirtualIP/Error:VirtualIPMustBeUnique', $sVirtualIP);
						}
					}         
				}]]></code>
				</method>

			</methods>
			
			<presentation>
				<details>
					<items>
						<item id="connectableci_id">
							<rank>20</rank>
						</item>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>50</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="comment">
							<rank>30</rank>
						</item>
					</items>
				</list>
			</presentation>

		</class>
		<class id="Domain" _delta="define">
			<parent>FunctionalCI</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>domain</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes _delta="redefine">
						<attribute id="domain"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/domain.png</icon>
				<reconciliation>
					<attributes _delta="redefine">
						<attribute id="domain"/>
						<attribute id="org_id"/>
						<attribute id="organization_name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="domain" xsi:type="AttributeString" _delta="define">
					<sql>domain</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>					
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[       public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// domain has to be unique! Currently it' not possible to define this in datamodel (xml)
					$aChanges = $this->ListChanges();
					if (array_key_exists('domain', $aChanges))
					{
						$sDomain = $aChanges['domain'];
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT Domain WHERE domain=:domain");
						$oSet = new DBObjectSet($oSearch, array(), array('domain' => $sDomain));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:Domain/Error:DomainMustBeUnique', $sDomain);
						}
					}         
				}]]></code>
				</method>

			</methods>
			
			<presentation>
				<details _delta="redefine">
					<items>
						<item id="domain">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>100</rank>
						</item>
						<item id="description">
							<rank>130</rank>
						</item>
						<item id="contacts_list">
							<rank>140</rank>
						</item>
						<item id="documents_list">
							<rank>150</rank>
						</item>
					</items>
				</details>
				<search _delta="redefine">
					<items>
						<item id="domain">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>100</rank>
						</item>
					</items>
				</search>
				<list _delta="redefine">
					<items>
						<item id="domain">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
		<class id="Cluster" _delta="define">
			<parent>FunctionalCI</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>cluster</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/cluster.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
						<attribute id="org_id"/>
						<attribute id="organization_name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="status" xsi:type="AttributeEnum">
					<values>
						<value id="production">production</value>
						<value id="implementation">implementation</value>
						<value id="stock">stock</value>
						<value id="obsolete">obsolete</value>
					</values>
					<sql>status</sql>
					<default_value>production</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>

			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[       public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// name has to be unique! Currently it' not possible to define this in datamodel (xml)
					$aChanges = $this->ListChanges();
					if (array_key_exists('name', $aChanges))
					{
						$sCluster = $aChanges['name'];
						if ($sCluster == "")
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:Cluster/Error:ClusterMustBeNotNull', $sCluster);
						}
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT Cluster WHERE name=:name");
						$oSet = new DBObjectSet($oSearch, array(), array('name' => $sCluster));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format('Class:Cluster/Error:ClusterMustBeUnique', $sCluster);
						}
					}         
				}]]></code>
				</method>

			</methods>
			
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>100</rank>
						</item>
						<item id="description">
							<rank>130</rank>
						</item>
						<item id="contacts_list">
							<rank>140</rank>
						</item>
						<item id="documents_list">
							<rank>150</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>100</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="org_id">
							<rank>20</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="business_criticity">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

	</classes>
	<menus>
		<menu id="ConfigManagementOverview" xsi:type="DashboardMenuNode">
			<definition>
				<cells>
					<cell id="0">
						<dashlets>
							<dashlet id="ip" xsi:type="DashletBadge" _delta="define">
								<rank>20</rank>
								<class>PhysicalIP</class>
							</dashlet>
							<dashlet id="vip" xsi:type="DashletBadge" _delta="define">
								<rank>21</rank>
								<class>VirtualIP</class>
							</dashlet>
							<dashlet id="cluster" xsi:type="DashletBadge" _delta="define">
								<rank>4</rank>
								<class>Cluster</class>
							</dashlet>
							<dashlet id="domain" xsi:type="DashletBadge" _delta="define">
								<rank>4</rank>
								<class>Domain</class>
							</dashlet>
							<dashlet id="3" _delta="delete"></dashlet>
						</dashlets>
					</cell>
					<cell id="3">
						<dashlets>
							<dashlet id="13" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="5" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="6" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="7" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="8" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="9" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="10" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="11" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="12" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="14" xsi:type="DashletBadge" _delta="delete"></dashlet>
						</dashlets>
					</cell>
					<cell id="4">
						<dashlets>
							<dashlet id="vlan" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="16" xsi:type="DashletBadge" _delta="delete"></dashlet>
							<dashlet id="17" xsi:type="DashletBadge" _delta="delete"></dashlet>
						</dashlets>
					</cell>
				</cells>
			</definition>
		</menu>

		<menu id="Typology" xsi:type="DashboardMenuNode">
			<definition>
				<cells>
					<cell id="0">
						<dashlets>
							<dashlet id="6" _delta="delete"></dashlet>
						</dashlets>
					</cell>
				</cells>
			</definition>
		</menu>

		<menu id="WelcomeMenuPage" xsi:type="DashboardMenuNode">
			<definition>
				<cells>
					<cell>
						<dashlets>
							<dashlet id="5" _delta="delete"></dashlet>
							<dashlet id="6" _delta="delete"></dashlet>
							<dashlet id="8" _delta="delete"></dashlet>
							<dashlet id="2" xsi:type="DashletBadge"  _delta="redefine">
								<rank>1</rank>
								<class>Domain</class>
							</dashlet>
						</dashlets>
					</cell>
				</cells>
			</definition>
		</menu>
		<menu id="Software" xsi:type="OQLMenuNode" _delta="delete"></menu>
		<menu id="Server" xsi:type="OQLMenuNode" _delta="define">
			<rank>7</rank>
			<parent>SearchCIs</parent>
			<oql>SELECT Server</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Domain" xsi:type="OQLMenuNode" _delta="define">
			<rank>7</rank>
			<parent>SearchCIs</parent>
			<oql>SELECT Domain</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="ApplicationSolution" xsi:type="OQLMenuNode" _delta="define">
			<rank>7</rank>
			<parent>SearchCIs</parent>
			<oql>SELECT ApplicationSolution</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Cluster" xsi:type="OQLMenuNode" _delta="define">
			<rank>7</rank>
			<parent>SearchCIs</parent>
			<oql>SELECT Cluster</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="IPAddress" xsi:type="OQLMenuNode" _delta="define">
			<rank>7</rank>
			<parent>SearchCIs</parent>
			<oql>SELECT IPAddress</oql>
			<do_search>1</do_search>
		</menu>


	</menus>
	<user_rights>
		<groups>
		</groups>
		<profiles>
		</profiles>
	</user_rights>
</itop_design>

<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
  <constants>
    <constant id="REQUEST_TEMPLATE_QUERY" xsi:type="string" _delta="define"><![CDATA[SELECT RequestTemplate WHERE servicesubcategory_id = :servicesubcategory_id AND service_id=:service_id]]>
    </constant>
  </constants>
  <classes>
	<class id="UserRequest">
		<methods>
			<method id="DoServerAccount" _delta="define">
				<static>false</static>
				<access>public</access>
				<type>Custom</type>
				<code><![CDATA[public function DoServerAccount()
{
	//检查工单状态的变化，对工单链接的配置项的状态进行变更
	$aChange = $this->ListChanges();
	if(array_key_exists('status', $aChange))
	{
		if($this->Get('origin') != "portal")
		{
			return;
		}
		
		$caller_id = $this->Get('caller_id');
		$iTopAPI = new iTopClient();
		// 拿到工单链接的服务器(需要过滤compute方式添加的配置项)
		$oCIs = $this->Get('functionalcis_list')->ToArrayOfValues();
		$server_ids = array();
		foreach($oCIs as $aCI)
		{
			$impact_code = $aCI['lnkFunctionalCIToTicket.impact_code'];		
			$nameClass = $aCI['lnkFunctionalCIToTicket.functionalci_id_finalclass_recall'];			
			// 如果是计算方式添加的配置项，忽略
			if($impact_code == "computed" || $nameClass != "Server")
			{
				continue;
			}
		
			$oID = $aCI['lnkFunctionalCIToTicket.functionalci_id'];
			array_push($server_ids, $oID);
		}
		
		$servers = implode("','", $server_ids);
		$oql = "SELECT lnkUserToServer AS l WHERE l.user_contactid = " . $caller_id . " AND l.server_id IN ('" . $servers . "')";
		
		// 工单审批通过，lnkUserToServer即变为enabled状态
		// server_accounts.php中提交工单并创建或更新lnkUserToServer时将status设置为disabled
		if($aChange['status'] == "resolved")
		{
			$iTopAPI->coreUpdate('lnkUserToServer', $oql, array("status"=>"enabled"));
		}
	}				
}
				]]>
				</code>
			</method>
			<method id="DoCheckToWrite" _delta="redefine">
				<static>false</static>
				<access>public</access>
				<type>Overload-DBObject</type>
				<code><![CDATA[public function DoCheckToWrite()
  {
    parent::DoCheckToWrite();
    if (!$this->IsNew() && ($this->Get('parent_request_id') == $this->GetKey()))
    {
      $this->m_aCheckIssues[] = Dict::Format('Class:UserRequest/Error:CannotAssignParentRequestIdToSelf');
    }
	
	// 处理服务器账号申请工单(lnkUserToServer)
	$lnkUserToServer_title = MetaModel::GetModuleSetting('custom-pages', 'ticket_title', "服务器登录权限申请-Server IDs");
	if(strpos($this->Get('title'), $lnkUserToServer_title) !== false)
	{
		$this->DoServerAccount();
		return;
	}
	//检查工单状态的变化，对工单链接的配置项的状态进行变更
	$aChange = $this->ListChanges();
	if(array_key_exists('status', $aChange))
	{
		if($this->Get('origin') != "portal")
		{
			return;
		}
		
		$iTopAPI = new iTopClient();
		// 拿到工单链接的配置项
		$oCIs = $this->Get('functionalcis_list')->ToArrayOfValues();
		foreach($oCIs as $aCI)
		{
			$impact_code = $aCI['lnkFunctionalCIToTicket.impact_code'];
			// 如果是计算方式添加的配置项，忽略
			if($impact_code == "computed")
			{
				continue;
			}
			$nameClass = $aCI['lnkFunctionalCIToTicket.functionalci_id_finalclass_recall'];
			$oID = $aCI['lnkFunctionalCIToTicket.functionalci_id'];
			$oObject = MetaModel::GetObject($nameClass, $oID);
			if($oObject->Get('status') == "implementation")
			{
				if($aChange['status'] == "closed")
				{
					$iTopAPI->coreUpdate($nameClass, $oID, array("status"=>"production"));
				}
				if($aChange['status'] == "rejected")
				{
					$iTopAPI->coreUpdate($nameClass, $oID, array("status"=>"obsolete"));
				}
				
			}
			
			// 审批未通过的工单重新打开，CI变为上线中
			if($oObject->Get("status") == "obsolete" && $aChange['status'] == "new")
			{
				$iTopAPI->coreUpdate($nameClass, $oID, array("status"=>"implementation"));
			}
		}
	}
  }]]>
				
				</code>
			</method>
		</methods>
	</class>
    <class id="ServiceSubcategory">
      <fields>
        <field id="requesttemplates_list" xsi:type="AttributeLinkedSet" _delta="define">
          <linked_class>RequestTemplate</linked_class>
          <ext_key_to_me>servicesubcategory_id</ext_key_to_me>
          <edit_mode>none</edit_mode>
          <count_min>0</count_min>
          <count_max>0</count_max>
        </field>
      </fields>
      <methods/>
      <presentation>
        <details>
          <items>
            <item id="requesttemplates_list" _delta="define">
              <rank>80</rank>
            </item>
          </items>
        </details>
      </presentation>
    </class>
    <class id="RequestTemplate" _delta="define">
      <parent>cmdbAbstractObject</parent>
      <php_parent>
        <name>Template</name>
      </php_parent>
      <properties>
        <category>bizmodel,searchable,servicemgmt</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>tpl_request</db_table>
        <db_key_field>id</db_key_field>
        <db_final_class_field/>
        <naming>
          <format>%1$s</format>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </naming>
        <display_template/>
        <icon/>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
            <attribute id="servicesubcategory_id"/>
            <attribute id="service_id"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields>
        <field id="service_id" xsi:type="AttributeExternalKey">
          <sql>service_id</sql>
          <target_class>Service</target_class>
          <is_null_allowed>false</is_null_allowed>
          <on_target_delete>DEL_AUTO</on_target_delete>
          <jointype/>
        </field>
        <field id="service_name" xsi:type="AttributeExternalField">
          <extkey_attcode>service_id</extkey_attcode>
          <target_attcode>name</target_attcode>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="servicesubcategory_id" xsi:type="AttributeExternalKey">
          <filter><![CDATA[SELECT ServiceSubcategory WHERE service_id =:this->service_id]]></filter>
          <dependencies>
            <attribute id="service_id"/>
          </dependencies>
          <sql>servicesubcategory_id</sql>
          <target_class>ServiceSubcategory</target_class>
          <is_null_allowed>false</is_null_allowed>
          <on_target_delete>DEL_AUTO</on_target_delete>
          <jointype/>
        </field>
        <field id="servicesubcategory_name" xsi:type="AttributeExternalField">
          <extkey_attcode>servicesubcategory_id</extkey_attcode>
          <target_attcode>name</target_attcode>
          <is_null_allowed>true</is_null_allowed>
        </field>
      </fields>
      <methods/>
      <presentation>
        <details>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="service_id">
              <rank>15</rank>
            </item>
            <item id="servicesubcategory_id">
              <rank>20</rank>
            </item>
            <item id="label">
              <rank>30</rank>
            </item>
			<item id="type">
				<rank>32</rank>
			</item>
            <item id="relatedclass">
              <rank>35</rank>
            </item>
            <item id="description">
              <rank>40</rank>
            </item>
            <item id="field_list">
              <rank>50</rank>
            </item>
          </items>
        </details>
        <search>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="service_id">
              <rank>15</rank>
            </item>
            <item id="servicesubcategory_id">
              <rank>20</rank>
            </item>
            <item id="label">
              <rank>30</rank>
            </item>
			<item id="type">
				<rank>32</rank>
			</item>			
            <item id="relatedclass">
              <rank>35</rank>
            </item>			
            <item id="description">
              <rank>40</rank>
            </item>
          </items>
        </search>
        <list>
          <items>
            <item id="service_id">
              <rank>15</rank>
            </item>
            <item id="servicesubcategory_id">
              <rank>20</rank>
            </item>
            <item id="label">
              <rank>30</rank>
            </item>
			<item id="type">
				<rank>32</rank>
			</item>			
          </items>
        </list>
      </presentation>
    </class>
  </classes>
  <menus>
    <menu id="RequestTemplate" xsi:type="OQLMenuNode" _delta="define">
      <rank>9</rank>
      <parent>ServiceManagement</parent>
      <oql>SELECT RequestTemplate</oql>
      <do_search>1</do_search>
    </menu>
  </menus>
  <user_rights>
    <groups>
      <group id="Service" _delta="must_exist">
        <classes>
          <class id="RequestTemplate" _delta="define"/>
          <class id="TemplateField" _delta="define"/>
        </classes>
      </group>
    </groups>
    <profiles>
    </profiles>
  </user_rights>
</itop_design>

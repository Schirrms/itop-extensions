<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2">
	<constants>
	</constants>
	<classes>
		<class id="Kubernetes" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>kubernetes</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
				</naming>
				<display_template/>
				<icon>images/kubernetes.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="org_id"/>
						<attribute id="organization_name"/>
						<attribute id="finalclass"/>						
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="description" xsi:type="AttributeText">
				  <sql>description</sql>
				  <default_value/>
				  <is_null_allowed>true</is_null_allowed>
				</field>
				<field id="org_id" xsi:type="AttributeExternalKey">
				  <sql>org_id</sql>
				  <target_class>Organization</target_class>
				  <is_null_allowed>false</is_null_allowed>
				  <on_target_delete>DEL_MANUAL</on_target_delete>
				  <filter>SELECT Organization WHERE id = :current_contact->org_id</filter>
				</field>
				<field id="organization_name" xsi:type="AttributeExternalField">
				  <extkey_attcode>org_id</extkey_attcode>
				  <target_attcode>name</target_attcode>
				</field>
				<field id="move2production" xsi:type="AttributeDate">
				  <sql>move2production</sql>
				  <default_value/>
				  <is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();
					// friendlyname has to be unique! Currently it' not possible to define this in datamodel (xml)
					
					$finalclass = $this->Get('finalclass');
					$nameSpec = MetaModel::GetNameSpec(get_class($this));
					$sFormat = preg_replace('/%[1-9]\$s/', '%s', $nameSpec['0']);
					$sArg = $nameSpec['1'];
					$oArg = array();
					
					/*
					 * 如果组成friendlyname的所有attribute都没有发生变化，那么不进行检查
					 * 如果不监听变化就进行检查，将导致对象无法更新
					 */
					$aChanges = $this->ListChanges();
					
					$isChanges = false;
					foreach($aChanges as $key=>$value)
					{   
						if(MetaModel::IsValidKeyAttCode($finalclass, $key))
						{   
							$extKeyFriends = MetaModel::GetExtKeyFriends($finalclass, $key);
							foreach($extKeyFriends as $k=>$v)
							{   
								if(in_array($k, $sArg))
								{   
									$isChanges = true;
								}
							}
						 
						}
						if(in_array($key, $sArg))
						{   
							$isChanges = true;
						}
					}
					
					foreach($sArg as $value) {
						array_push($oArg, $this->Get($value));
					}
					$sTypology = vsprintf("$sFormat", $oArg);
					//print_r($this->Get('name') . "<br>");
					//print_r($this->Get('brand_name') . "<br>");
					//print_r($this->Get('friendlyname') . "<br>");
					//print_r($oArg);
					//print_r("<br>");
					
					if($isChanges) {
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT $finalclass WHERE friendlyname=:friendlyname");
						$oSet = new DBObjectSet($oSearch, array(), array('friendlyname' => $sTypology));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format("Class:".$finalclass."/Error:".$finalclass."MustBeUnique", $sTypology);
						}
					}
				}]]></code>
				</method>			
			</methods>
			<presentation>
				<details></details>
				<search></search>
				<list></list>
			</presentation>
		</class>
		
		<class id="Deployment" _delta="define">
			<parent>Kubernetes</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>deployment</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="app_name"/>
						<attribute id="k8s_namespace"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/deployment.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="applicationsolution_id" xsi:type="AttributeExternalKey">
					<sql>applicationsolution_id</sql>
					<target_class>ApplicationSolution</target_class>
					<is_null_allowed>false</is_null_allowed>
					<filter>SELECT ApplicationSolution AS app JOIN lnkContactToApplicationSolution AS l ON l.applicationsolution_id = app.id WHERE l.contact_id = :current_contact_id</filter>
					<on_target_delete>DEL_AUTO</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="applicationsolution_name" xsi:type="AttributeExternalField">
					<extkey_attcode>applicationsolution_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="status" xsi:type="AttributeEnum">
					<values>
						<value id="production">production</value>
						<value id="stock">stock</value>
					</values>
					<sql>status</sql>
					<default_value>production</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>			
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();
				}]]>
					</code>
				</method>

			</methods>
			<presentation>
				<details>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="type">
							<rank>15</rank>
						</item>
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="ipaddress">
							<rank>10</rank>
						</item>
						<item id="type">
							<rank>15</rank>
						</item>
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="type">
							<rank>15</rank>
						</item>						
						<item id="comment">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
	</classes>
	<menus>
	</menus>
</itop_design>

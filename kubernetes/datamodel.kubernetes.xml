<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2">
	<constants>
	</constants>
	<classes>
		<class id="Kubernetes" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>kubernetes</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="k8snamespace_name"/>
						<attribute id="applicationsolution_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/kubernetes.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="org_id"/>
						<attribute id="organization_name"/>
						<attribute id="finalclass"/>
						<attribute id="friendlyname"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="k8snamespace_id" xsi:type="AttributeExternalKey">
					<sql>k8snamespace_id</sql>
					<target_class>K8sNamespace</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="k8snamespace_name" xsi:type="AttributeExternalField">
					<extkey_attcode>k8snamespace_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="applicationsolution_id" xsi:type="AttributeExternalKey">
					<sql>applicationsolution_id</sql>
					<target_class>ApplicationSolution</target_class>
					<is_null_allowed>false</is_null_allowed>
					<filter>SELECT ApplicationSolution AS app JOIN lnkContactToApplicationSolution AS l ON l.applicationsolution_id = app.id WHERE app.status='production' AND l.contact_id = :current_contact_id</filter>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="applicationsolution_name" xsi:type="AttributeExternalField">
					<extkey_attcode>applicationsolution_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="applicationsolution_contact" xsi:type="AttributeExternalField">
					<extkey_attcode>applicationsolution_id</extkey_attcode>
					<target_attcode>contacts</target_attcode>
				</field>
				<field id="applicationsolution_business" xsi:type="AttributeExternalField">
					<extkey_attcode>applicationsolution_id</extkey_attcode>
					<target_attcode>businessprocess_id</target_attcode>
				</field>
				<field id="status" xsi:type="AttributeEnum">
					<values>
						<value id="new">new</value>
						<value id="production">production</value>
						<value id="error">error</value>
						<value id="stock">stock</value>
					</values>
					<sql>status</sql>
					<default_value>new</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="flag_kubestatus" xsi:type="AttributeString">
					<sql>flag_kubestatus</sql>
					<default_value>MANUAL</default_value>
					<is_null_allowed>true</is_null_allowed>
					<tracking_level>none</tracking_level>
				</field>
				<field id="description" xsi:type="AttributeText">
				  <sql>description</sql>
				  <default_value/>
				  <is_null_allowed>true</is_null_allowed>
				</field>
				<field id="org_id" xsi:type="AttributeExternalKey">
				  <sql>org_id</sql>
				  <target_class>Organization</target_class>
				  <is_null_allowed>false</is_null_allowed>
				  <on_target_delete>DEL_MANUAL</on_target_delete>
				  <filter>SELECT Organization WHERE id = :current_contact->org_id</filter>
				</field>
				<field id="organization_name" xsi:type="AttributeExternalField">
				  <extkey_attcode>org_id</extkey_attcode>
				  <target_attcode>name</target_attcode>
				</field>
				<field id="move2production" xsi:type="AttributeDate">
				  <sql>move2production</sql>
				  <default_value/>
				  <is_null_allowed>true</is_null_allowed>
				</field>
				<field id="person_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkPersonToKubernetes</linked_class>
					<ext_key_to_me>kubernetes_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>person_id</ext_key_to_remote>
					<duplicates/>
				</field>
				<field id="update" xsi:type="AttributeString">
					<sql>update</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="change_log" xsi:type="AttributeText">
					<sql>change_log</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="ComputeValues" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
					public function ComputeValues()
					{
						if(MetaModel::IsValidKeyAttCode($this->Get('finalclass'), 'applicationsolution_id') && $this->Get('applicationsolution_id') > 0)
						{
							$app = MetaModel::GetObjectByColumn('ApplicationSolution', 'name', $this->Get('applicationsolution_name'), false);
							$this->Set("org_id", $app->Get("org_id"));

							// 根据关联的APP自动填充联系人字段
							$app = MetaModel::GetObject('ApplicationSolution', $this->Get('applicationsolution_id'));
							$list = $app->Get('contact_list_custom');

							// ormLinkSet需要设置oOriginalSet
							$oOriginalSet = DBObjectSet::FromScratch('lnkPersonToKubernetes');
							$c = new ormLinkSet('Kubernetes', 'person_list', $oOriginalSet);
							foreach($list as $v)
							{
								$p = new lnkPersonToKubernetes();
								$p->Set('person_id', $v->Get('contact_id'));
								$p->Set('kubernetes_id', $this->GetKey());
								$c->AddItem($p);
							}
							$this->Set('person_list', $c);
						} 
						else {
							$this->Set("org_id", UserRights::GetContactObject()->Get('org_id'));
						}

						return parent::ComputeValues();
					}
					]]>
					</code>
				</method>

				<method id="isAllowedModifyCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
						public function isAllowedModifyCustom()
						{
							if($this->IsNew()) {
								return true;
							}

							$myContactId = UserRights::GetContactId();

							// Deployment和Ingress使用lnkPersonToKubernetes的person_list会有延迟（依赖UpdateKubernetesContacts的执行间隔），因此使用ApplicationSolution的contact_list）
							if($this->Get('finalclass') != "Secret")
							{
								$app = MetaModel::GetObject('ApplicationSolution', $this->Get('applicationsolution_id'));
								$person_list = $app->Get('contact_list_custom');
								$key = 'contact_id';
							}
							else 
							{
								$person_list = $this->Get('person_list');
								$key = 'person_id';
							}
							$contacts = array();
							foreach($person_list as $v) {
								$contacts[] = $v->Get($key);
							}
							if(!in_array($myContactId, $contacts) && !UserRights::IsAdministrator())
							{
								return false;
							}
							else
							{
								return(true);
							}
						}
					]]>
					</code>
				</method>

				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>

				<method id="DisplayDetails" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[
						public function DisplayDetails(WebPage $oPage, $bEditMode = false) {
							$sAppRoot = utils::GetAbsoluteUrlAppRoot();

							$sHighlightTheme = MetaModel::GetModuleSetting('kubernetes', 'highlight_theme', 'vs2015');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/functions.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/highlightjs/highlight.pack.js');
							$oPage->add_linked_stylesheet($sAppRoot . 'env-production/kubernetes/js/highlightjs/styles/' . $sHighlightTheme . '.css');
							$oPage->add_ready_script("KubernetesHighlight();");
							$sStatus = Dict::S("Class:Kubernetes/Attribute:status/Value:production");
							$oPage->add_ready_script("KubernetesStatusHighlight('$sStatus');");
							parent::DisplayDetails($oPage, $bEditMode);
						}
					]]></code>
				</method>
				<method id="AceEditor" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
						public function AceEditor($oPage) {
							$sAppRoot = utils::GetAbsoluteUrlAppRoot();
							$sAceMinHeight = MetaModel::GetModuleSetting('kubernetes', 'ace_editor_minHeight', '300px');
							$sAceTheme = MetaModel::GetModuleSetting('kubernetes', 'ace_editor_theme', 'xcode');

							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/ace/ace.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/ace/mode-yaml.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/ace/theme-' . $sAceTheme . '.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/functions.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/jquery.fullscreen-min.js');

							// 需在parent::DisplayModifyForm之后执行，否则无法取消原fullscreen事件
							$oPage->add_ready_script("KubernetesAceInit('$sAceMinHeight','$sAceTheme');");
						}
					]]>
					</code>
				</method>
				<method id="DisplayModifyForm" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[
						public function DisplayModifyForm(WebPage $oPage, $aExtraParams = array())
						{

							if(!self::isAllowedModifyCustom())
							{
								$sMesg = Dict::Format("Class:Kubernetes/Error:CanOnlyUpdateK8SObjYourself", $this->Get('friendlyname'));
								self::ReloadAndDisplayCustom($oPage, $this, 'k8s-modify-not-allowd', $sMesg, 'info');
							}
							else
							{
								parent::DisplayModifyForm($oPage, $aExtraParams);
							}

							self::AceEditor($oPage);
						}
					]]>
					</code>
				</method>
				<method id="DisplayStimulusForm" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[
						public function DisplayStimulusForm(WebPage $oPage, $sStimulus, $aPrefillFormParam = null)
						{
							parent::DisplayStimulusForm($oPage, $sStimulus, $aPrefillFormParam);
							self::AceEditor($oPage);
						}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   public function DoCheckToWrite()
				{
					parent::DoCheckToWrite();

					// 不允许修改非自己名下的对象
					if(!self::isAllowedModifyCustom())
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:Kubernetes/Error:CanOnlyUpdateK8SObjYourself", $this->Get('friendlyname'));
					}

					// friendlyname has to be unique! Currently it' not possible to define this in datamodel (xml)

					$finalclass = $this->Get('finalclass');
					$nameSpec = MetaModel::GetNameSpec(get_class($this));
					$sFormat = preg_replace('/%[1-9]\$s/', '%s', $nameSpec['0']);
					$sArg = $nameSpec['1'];
					$oArg = array();

					/*
					 * 如果组成friendlyname的所有attribute都没有发生变化，那么不进行检查
					 * 如果不监听变化就进行检查，将导致对象无法更新
					 */
					$aChanges = $this->ListChanges();

					$isChanges = false;
					foreach($aChanges as $key=>$value)
					{   
						if(in_array($key, $sArg))
						{   
							$isChanges = true;
						}
					}

					foreach($sArg as $value) {
						array_push($oArg, $this->Get($value));
					}
					$sTypology = vsprintf("$sFormat", $oArg);

					if($isChanges) {
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT $finalclass WHERE friendlyname=:friendlyname");
						$oSet = new DBObjectSet($oSearch, array(), array('friendlyname' => $sTypology));
						if ($oSet->Count() > 0)
						{
							$this->m_aCheckIssues[] = Dict::Format("Class:Kubernetes/Error:MustBeUnique", $sTypology, Dict::S("Class:$finalclass"));
						}
					}

					// kubernetes action如果执行报错，将kubestatus设置为对应颜色代码，并设置 flag_kubestatus 为大于1的值
					// 如果 kubestatus 和 flag_kubestatus 都没有被更新，说明是人工操作，那么将 flag_kubestatus 还原为 0
					// flag_kubestatus 用来防止循环执行Kubernetes对象更新action，如果 flag_kubestatus 大于0，那么kubernetes action将直接退出
					if(!array_key_exists("flag_kubestatus", $aChanges)) {
						$this->Set('flag_kubestatus', 'MANUAL');
					}
				}]]></code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
					public function CheckToDelete(&$oDeletionPlan)
					{
						if($this->Get('status') != "stock") {
							// 不允许删除非下线状态的对象
							$oDeletionPlan->AddToDelete($this, null);
							$oDeletionPlan->SetDeletionIssues($this, array('在线状态的对象不允许直接删除'), true);
							$oDeletionPlan->ComputeResults();
							return false;
						}

						if(!self::isAllowedModifyCustom()) {
							// 普通用户不允许删除非自己名下的Kubernetes对象
							$oDeletionPlan->AddToDelete($this, null);
							$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的对象'), true);
							$oDeletionPlan->ComputeResults();
							return false;
						}
						return parent::CheckToDelete($oDeletionPlan);
					} 
					]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="org_id">
							<rank>10</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="org_id">
							<rank>10</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="org_id">
							<rank>10</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
		<class id="Controller" _delta="define">
			<parent>Kubernetes</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>controller</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="k8snamespace_name"/>
						<attribute id="applicationsolution_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/deployment.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="k8snamespace_id"/>
						<attribute id="applicationsolution_id"/>
						<attribute id="friendlyname"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="image" xsi:type="AttributeString">
					<sql>image</sql>
					<default_value/>
					<validation_pattern>^[a-z0-9\./\-]+$</validation_pattern>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="image_tag" xsi:type="AttributeString">
					<sql>image_tag</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="repo" xsi:type="AttributeString">
					<sql>repo</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="containerport" xsi:type="AttributeInteger">
					<sql>containerport</sql>
					<default_value>80</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="replicas" xsi:type="AttributeInteger">
					<sql>replicas</sql>
					<default_value>3</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="fix_replicas" xsi:type="AttributeEnum">
					<values>
						<value id="true">true</value>
						<value id="false">false</value>
					</values>
					<sql>fix_replicas</sql>
					<default_value>false</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="secret" xsi:type="AttributeText">
					<sql>secret</sql>
					<is_null_allowed>true</is_null_allowed>
					<default_value/>
					<tracking_level>all</tracking_level>
				</field>
				<field id="cpu_request" xsi:type="AttributeDecimal">
					<sql>cpu_request</sql>
					<default_value>0.1</default_value>
					<is_null_allowed>false</is_null_allowed>
					<digits>4</digits>
					<decimals>2</decimals>
				</field>
				<field id="cpu_limit" xsi:type="AttributeDecimal">
					<sql>cpu_limit</sql>
					<default_value>0.1</default_value>
					<is_null_allowed>false</is_null_allowed>
					<digits>4</digits>
					<decimals>2</decimals>
				</field>
				<field id="mem_request" xsi:type="AttributeInteger">
					<sql>mem_request</sql>
					<default_value>128</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="affinity_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sAffinityToController</linked_class>
					<ext_key_to_me>controller_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>k8saffinity_id</ext_key_to_remote>
					<duplicates/>
				</field>
				<field id="volume_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sVolumeToController</linked_class>
					<ext_key_to_me>controller_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>k8svolume_id</ext_key_to_remote>
					<duplicates/>
				</field>
				<field id="hostnetwork" xsi:type="AttributeEnum">
					<values>
						<value id="true">true</value>
						<value id="false">false</value>
					</values>
					<sql>hostnetwork</sql>
					<default_value>false</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="rolling_strategy" xsi:type="AttributeString">
					<sql>rolling_strategy</sql>
					<default_value/>
					<validation_pattern>^[0-9]+%?:[0-9]+%?$</validation_pattern>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="hostaliases" xsi:type="AttributeText">
					<sql>hostaliases</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="RecordAttChange" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
					protected function RecordAttChange($sAttCode, $original, $value) {
						if($sAttCode == "secret") {
							require_once dirname(__FILE__) . "/composer/vendor/autoload.php";
							$differ = new SebastianBergmann\Diff\Differ;

							$oAttDef = MetaModel::GetAttributeDef(get_class($this), $sAttCode);
							if ($oAttDef->IsExternalField()) return;
							if ($oAttDef->IsLinkSet()) return;
							if ($oAttDef->GetTrackingLevel() == ATTRIBUTE_TRACKING_NONE) return;

							$oMyChangeOp = MetaModel::NewObject("CMDBChangeOpSetAttributeHTML");
							$oMyChangeOp->Set("objclass", get_class($this));
							$oMyChangeOp->Set("objkey", $this->GetKey());
							$oMyChangeOp->Set("attcode", $sAttCode);

							if (!is_null($original) && ($original instanceof ormCaseLog))
							{
								$original = $original->GetText();
							}

							$prevdata = $differ->diff($original, $value);
							$prevdata = '<pre><code class="diff">' . $prevdata . '</code></pre>';
							$oMyChangeOp->Set("prevdata", $prevdata);
							$iId = $oMyChangeOp->DBInsertNoReload();
						} else {
							parent::RecordAttChange($sAttCode, $original, $value);
						}
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	  
					public function DoCheckToWrite()
					{
						// 保留名称
						$default_reserve = array($this->Get('k8snamespace_name') . "-router", 'default-http-backend');
						$reserve = MetaModel::GetModuleSetting('kubernetes', 'reserve', $default_reserve);
						$reserve = array_merge($default_reserve, $reserve);
						if(in_array($this->Get('applicationsolution_name'), $reserve)) {
							$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:ReservedAppNameNotAllowed", $this->Get('applicationsolution_name'));
						}

						// 检查secret是否是yaml格式
						$yaml = $this->Get('secret');
						if($yaml) {
							$parsed = @yaml_parse($yaml);
							if(!is_array($parsed)) {
								$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:SecretShouldBeYamlFormat", $this->Get('applicationsolution_name'));
							}
						}

						// 检查hostaliases
						$hosts = $this->Get('hostaliases');
						if($hosts) {
							$parsed = @yaml_parse($hosts);
							if(!is_array($parsed)) {
								$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:hostaliasesShouldBeYamlFormat", $this->Get('hostaliases'));
							} else {
								// k8s hostaliases域名校验正则为：[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
								foreach($parsed as $domain => $ip) {
									if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4)) {
										$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:IpIsInvalid", $ip);
									}
									if(!preg_match('/^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/', $domain)) {
										$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:DomainIsInvalid", $domain);
									}
								}
							}
						}

						// cpu_limit >= cpu_request
						if($this->Get('cpu_limit') < $this->Get('cpu_request')) {
							$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:CpuLimitCanNotLessThanCpuRequest", $this->Get('cpu_limit'));
						}

						// maxSurge maxUnavailable不能同时为0
						$strategy = $this->Get("rolling_strategy");
						if($strategy) {
							$s = str_replace("%", "", $strategy);
							$arr = explode(":",$s);
							if($arr[0] == 0 && $arr[1] == 0) {
								$this->m_aCheckIssues[] = Dict::Format("Class:Controller/Error:maxSurgeAndmaxUnavailableCannotBeZeroBoth", $this->Get('rolling_strategy'));
							}
						}
						parent::DoCheckToWrite();
					}
					]]>
					</code>
				</method>
				<method id="GetAttributeFlags" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
					{
						// 权限控制，不允许查看非自己名下Controller的Secret数据
						if(!$this->IsNew() && $sAttCode == 'secret') 
						{
							$myContactId = UserRights::GetContactId();
							$person_list = $this->Get('person_list');
							$contacts = array();
							foreach($person_list as $v) {
								$contacts[] = $v->Get('person_id');
							}
							if(!in_array($myContactId, $contacts) && !UserRights::IsAdministrator())
							{
								return OPT_ATT_HIDDEN;
							}
						}
  
						// hostnetwork 只允许管理员配置
						if(!UserRights::IsAdministrator() && $sAttCode == 'hostnetwork') {
							return OPT_ATT_READONLY;
						}
  
						$sArg = array('k8snamespace_id','applicationsolution_id');
						if (!$this->IsNew() && in_array($sAttCode, $sArg))
						{
							return OPT_ATT_READONLY;
						}
						else
						{
							return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
						}
					}
					]]>
					</code>
				</method>
				<method id="DisplayBareHistory" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function DisplayBareHistory(WebPage $oPage, $bEditMode = false, $iLimitCount = 0, $iLimitStart = 0)
					{
						// 权限控制，不允许查看非自己名下对象的history table
						if(!$this->IsNew()) 
						{
							$myContactId = UserRights::GetContactId();
							$person_list = $this->Get('person_list');
							$contacts = array();
							foreach($person_list as $v) {
								$contacts[] = $v->Get('person_id');
							}
							if(!in_array($myContactId, $contacts) && !UserRights::IsAdministrator())
							{
								return "";
							}
						}
						$oPage->add_ready_script('$("code.diff").each(function(i,block){hljs.configure({useBR: false, languages: ["diff"]});hljs.highlightBlock(block);});');
						parent::DisplayBareHistory($oPage, $bEditMode, $iLimitCount, $iLimitStart);
					}
					]]>
					</code>
				</method>
				<method id="DisplayBareRelations" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[	  public function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
					{
						parent::DisplayBareRelations($oPage, $bEditMode);

						$kubedash = trim(MetaModel::GetModuleSetting('kubernetes', 'kubernetes_dashboard_url', 'http://localhost/'));
						$iframeHeight = trim(MetaModel::GetModuleSetting('kubernetes', 'iframe_height', '600px'));
						$app = $this->Get('applicationsolution_name');
						$ns = $this->Get('k8snamespace_name');
						// Fix me! 除deployment之外还有其他类型
						$tabUrl = $kubedash . "/#!/deployment/" . $ns . "/" . $app . "?namespace=" . $ns;
						$iframe_start = '<iframe style="border:0;padding:0;margin:0;width:100%;height:' . $iframeHeight . ';overflow:auto" ';
						$iframe_end = '</iframe></div>';
						$addStr = $iframe_start . 'src=' . '"' . $tabUrl . '"' . '>' . $iframe_end;
						if (!$bEditMode)
						{
							$oPage->SetCurrentTab(Dict::S('Class:Controller/Tab:Debug'));
							$oPage->add('<div id="kubernetes_dashboard_url" style="width:100%;height:' . $iframeHeight . ';">');
							$oPage->add($addStr);
						}
					}]]></code>
				</method>
			</methods>
			<presentation>
				<default_search>
					<items>
						<item id="status">
							<rank>1</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>5</rank>
						</item>
						<item id="applicationsolution_name">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_contact">
							<rank>70</rank>
						</item>
						<item id="applicationsolution_business">
							<rank>80</rank>
						</item>
						<item id="replicas">
							<rank>60</rank>
						</item>
					</items>
				</default_search>
				<details>
					<items>
						<item id="col:col1">
							<rank>10</rank>
							<items>
								<item id="fieldset:Deployment:baseinfo">
									<rank>10</rank>
									<items>
										<item id="k8snamespace_id">
											<rank>10</rank>
										</item>
										<item id="applicationsolution_id">
											<rank>15</rank>
										</item>
										<item id="status">
											<rank>30</rank>
										</item>
										<item id="image">
											<rank>40</rank>
										</item>
										<item id="image_tag">
											<rank>42</rank>
										</item>
										<item id="repo">
											<rank>45</rank>
										</item>
										<item id="replicas">
											<rank>50</rank>
										</item>
										<item id="cpu_request">
											<rank>52</rank>
										</item>
										<item id="cpu_limit">
											<rank>54</rank>
										</item>
										<item id="mem_request">
											<rank>56</rank>
										</item>
										<item id="containerport">
											<rank>60</rank>
										</item>
										<item id="hostnetwork">
											<rank>65</rank>
										</item>
										<item id="org_id">
											<rank>70</rank>
										</item>
										<item id="move2production">
											<rank>80</rank>
										</item>
										<item id="description">
											<rank>90</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="person_list">
							<rank>60</rank>
						</item>
						<item id="affinity_list">
							<rank>120</rank>
						</item>
						<item id="volume_list">
							<rank>130</rank>
						</item>
						<item id="col:col2">
							<rank>200</rank>
							<items>
								<item id="fieldset:Controller:secret">
									<rank>210</rank>
									<items>
										<item id="secret">
											<rank>220</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="col:col3">
							<rank>300</rank>
							<items>
								<item id="fieldset:Controller:other">
									<rank>310</rank>
									<items>
										<item id="change_log">
											<rank>320</rank>
										</item>
										<item id="rolling_strategy">
											<rank>330</rank>
										</item>
										<item id="hostaliases">
											<rank>340</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="image">
							<rank>40</rank>
						</item>
						<item id="replicas">
							<rank>50</rank>
						</item>
						<item id="cpu_request">
							<rank>52</rank>
						</item>
						<item id="cpu_limit">
							<rank>54</rank>
						</item>
						<item id="mem_request">
							<rank>56</rank>
						</item>
						<item id="containerport">
							<rank>60</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
						<item id="description">
							<rank>90</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="replicas">
							<rank>50</rank>
						</item>
						<item id="cpu_request">
							<rank>52</rank>
						</item>
						<item id="cpu_limit">
							<rank>54</rank>
						</item>
						<item id="mem_request">
							<rank>56</rank>
						</item>
						<item id="containerport">
							<rank>60</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="Deployment" _delta="define">
			<parent>Controller</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>deployment</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="k8snamespace_name"/>
						<attribute id="applicationsolution_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/deployment.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="k8snamespace_id"/>
						<attribute id="applicationsolution_id"/>
						<attribute id="friendlyname"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="type" xsi:type="AttributeEnum">
					<values>
						<value id="web">web</value>
						<value id="worker">worker</value>
					</values>
					<sql>type</sql>
					<default_value>web</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="https" xsi:type="AttributeEnum">
					<values>
						<value id="on">on</value>
						<value id="off">off</value>
					</values>
					<sql>https</sql>
					<default_value>on</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="url" xsi:type="AttributeURL">
					<sql>url</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="ingress_list" xsi:type="AttributeLinkedSet">
					<linked_class>Ingress</linked_class>
					<ext_key_to_me>deployment_id</ext_key_to_me>
					<edit_mode>add_only</edit_mode>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<duplicates/>
				</field>
				<field id="ingressannotations_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sIngressAnnotationsToDeployment</linked_class>
					<ext_key_to_me>deployment_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>k8singressannotations_id</ext_key_to_remote>
					<duplicates/>
				</field>
			</fields>
			<lifecycle>
				<highlight_scale>
					<item id="warning">
						<rank>1</rank>
						<color>HIGHLIGHT_CLASS_CRITICAL</color>
						<icon>images/error.png</icon>
					</item>
					<item id="new">
						<rank>2</rank>
						<color>HIGHLIGHT_CLASS_WARNING</color>
						<icon>images/new.png</icon>
					</item>
				</highlight_scale>
				<attribute>status</attribute>
				<stimuli>
					<stimulus id="ev_error" xsi:type="StimulusInternal"/>
					<stimulus id="ev_online" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_offline" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_update" xsi:type="StimulusUserAction"/>
				</stimuli>
				<states>
					<state id="new">
						<highlight>
							<code>new</code>
						</highlight>
						<flags>
							<attribute id="org_id">
								<read_only/>
							</attribute>
							<attribute id="url">
								<read_only/>
							</attribute>
							<attribute id="person_list">
								<read_only/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
							<attribute id="image_tag">
								<must_prompt/>
							</attribute>
							<attribute id="replicas">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_request">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_limit">
								<must_prompt/>
							</attribute>
							<attribute id="mem_request">
								<must_prompt/>
							</attribute>
							<attribute id="secret">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="production">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="type">
								<read_only/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
							<attribute id="image_tag">
								<must_prompt/>
							</attribute>
							<attribute id="replicas">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_request">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_limit">
								<must_prompt/>
							</attribute>
							<attribute id="mem_request">
								<must_prompt/>
							</attribute>
							<attribute id="secret">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="error">
						<highlight>
							<code>warning</code>
						</highlight>
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="type">
								<read_only/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
							<attribute id="image_tag">
								<must_prompt/>
							</attribute>
							<attribute id="replicas">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_request">
								<must_prompt/>
							</attribute>
							<attribute id="cpu_limit">
								<must_prompt/>
							</attribute>
							<attribute id="mem_request">
								<must_prompt/>
							</attribute>
							<attribute id="secret">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="stock">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="change_log">
								<must_prompt/>
								<must_change/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_online">
								<target>production</target>
								<actions/>
							</transition>
						</transitions>
					</state>
				</states>
			</lifecycle>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	  
					public function DoCheckToWrite()
					{
						// 自动填充url字段
						$k8snamespace = MetaModel::GetObject('K8sNamespace',$this->Get('k8snamespace_id'));
						$domain = $k8snamespace->Get('domain');
						// 判断有无domain，某些集群可以没有默认域名
						if($domain) {
							$host = str_replace("_", "-", $this->Get('applicationsolution_name'));
							$url = 'http://' . $host . $domain;
							$this->Set('url', $url);
						} else {
							$this->Set('url', '');
						}

						// 检查ingressannotations格式
						$validate = $this->Get('ingressannotations_list');
						foreach($validate as $val) {
							$value = $val->Get('value');
							$pattern = $val->Get('k8singressannotations_validate');
							if(!$value) {
								$value = $val->Get('k8singressannotations_default_value');
								$val->Set('value', $value);
							}
							if($pattern && !preg_match($pattern, $value)) {
								$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToDeployment/Error:ValueNotValid", $pattern);
							}
						}
						parent::DoCheckToWrite();
					}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="type">
							<rank>20</rank>
						</item>
						<item id="https">
							<rank>25</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="image">
							<rank>40</rank>
						</item>
						<item id="image_tag">
							<rank>42</rank>
						</item>
						<item id="repo">
							<rank>45</rank>
						</item>
						<item id="replicas">
							<rank>50</rank>
						</item>
						<item id="cpu_request">
							<rank>52</rank>
						</item>
						<item id="cpu_limit">
							<rank>54</rank>
						</item>
						<item id="mem_request">
							<rank>56</rank>
						</item>
						<item id="containerport">
							<rank>60</rank>
						</item>
						<item id="hostnetwork">
							<rank>65</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
						<item id="description">
							<rank>900</rank>
						</item>
						<item id="url">
							<rank>100</rank>
						</item>
						<item id="ingress_list">
							<rank>110</rank>
						</item>
						<item id="person_list">
							<rank>60</rank>
						</item>
						<item id="affinity_list">
							<rank>120</rank>
						</item>
						<item id="volume_list">
							<rank>130</rank>
						</item>
						<item id="ingressannotations_list">
							<rank>140</rank>
						</item>
						<item id="col:col2">
							<rank>200</rank>
							<items>
								<item id="fieldset:Deployment:secret">
									<rank>210</rank>
									<items>
										<item id="secret">
											<rank>220</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="col:col3">
							<rank>300</rank>
							<items>
								<item id="fieldset:Deployment:other">
									<rank>310</rank>
									<items>
										<item id="change_log">
											<rank>320</rank>
										</item>
										<item id="rolling_strategy">
											<rank>330</rank>
										</item>
										<item id="hostaliases">
											<rank>340</rank>
										</item>
										<item id="fix_replicas">
											<rank>350</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="type">
							<rank>20</rank>
						</item>
						<item id="https">
							<rank>25</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="image">
							<rank>40</rank>
						</item>
						<item id="replicas">
							<rank>50</rank>
						</item>
						<item id="cpu_request">
							<rank>52</rank>
						</item>
						<item id="cpu_limit">
							<rank>54</rank>
						</item>
						<item id="mem_request">
							<rank>56</rank>
						</item>
						<item id="containerport">
							<rank>60</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
						<item id="description">
							<rank>90</rank>
						</item>
						<item id="url">
							<rank>100</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="type">
							<rank>20</rank>
						</item>
						<item id="https">
							<rank>25</rank>
						</item>
						<item id="status">
							<rank>30</rank>
						</item>
						<item id="replicas">
							<rank>50</rank>
						</item>
						<item id="cpu_request">
							<rank>52</rank>
						</item>
						<item id="cpu_limit">
							<rank>54</rank>
						</item>
						<item id="mem_request">
							<rank>56</rank>
						</item>
						<item id="containerport">
							<rank>60</rank>
						</item>
						<item id="org_id">
							<rank>70</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="ApplicationSolution">
			<fields>
				<field id="controller_list" xsi:type="AttributeLinkedSet" _delta="define">
					<linked_class>Controller</linked_class>
					<ext_key_to_me>applicationsolution_id</ext_key_to_me>
					<edit_mode>add_only</edit_mode>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<duplicates/>
				</field>
			</fields>
			<presentation>
				<details>
					<items>
						<item id="controller_list" _delta="define">
							<rank>100</rank>
						</item>
					</items>
				</details>
			</presentation>
		</class>

		<class id="Ingress" _delta="define">
			<parent>Kubernetes</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>ingress</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="domain_name"/>
						<attribute id="location"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/ingress.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="deployment_id"/>
						<attribute id="domain_id"/>
						<attribute id="location"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="type" xsi:type="AttributeEnum">
					<values>
						<value id="internal">internal</value>
						<value id="external">external</value>
					</values>
					<sql>type</sql>
					<default_value>internal</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="endpoints" xsi:type="AttributeText">
					<sql>endpoints</sql>
					<is_null_allowed>true</is_null_allowed>
					<default_value/>
					<tracking_level>all</tracking_level>
				</field>
				<field id="manage_svc" xsi:type="AttributeEnum">
					<values>
						<value id="yes">yes</value>
						<value id="clean">clean</value>
						<value id="no">no</value>
					</values>
					<sql>manage_svc</sql>
					<default_value>no</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="deployment_id" xsi:type="AttributeExternalKey">
					<sql>deployment_id</sql>
					<target_class>Deployment</target_class>
					<is_null_allowed>true</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="deployment_name" xsi:type="AttributeExternalField">
					<extkey_attcode>deployment_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<field id="domain_id" xsi:type="AttributeExternalKey">
					<sql>domain_id</sql>
					<target_class>Domain</target_class>
					<is_null_allowed>false</is_null_allowed>
					<filter>SELECT Domain AS d JOIN lnkApplicationSolutionToFunctionalCI AS l ON l.functionalci_id=d.id WHERE d.status='production' AND l.applicationsolution_id = :this->applicationsolution_id</filter>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
					<dependencies>
						<attribute id="applicationsolution_id"/>
					</dependencies>
				</field>
				<field id="domain_name" xsi:type="AttributeExternalField">
					<extkey_attcode>domain_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="location" xsi:type="AttributeString">
					<sql>location</sql>
					<default_value>/</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="https" xsi:type="AttributeEnum">
					<values>
						<value id="on">on</value>
						<value id="off">off</value>
					</values>
					<sql>https</sql>
					<default_value>on</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="serviceport" xsi:type="AttributeInteger">
					<sql>serviceport</sql>
					<default_value>80</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="ingressannotations_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sIngressAnnotationsToIngress</linked_class>
					<ext_key_to_me>ingress_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>k8singressannotations_id</ext_key_to_remote>
					<duplicates/>
				</field>
				<field id="url" xsi:type="AttributeURL">
					<sql>url</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<lifecycle>
				<highlight_scale>
					<item id="warning">
						<rank>1</rank>
						<color>HIGHLIGHT_CLASS_CRITICAL</color>
						<icon>images/error.png</icon>
					</item>
					<item id="new">
						<rank>2</rank>
						<color>HIGHLIGHT_CLASS_WARNING</color>
						<icon>images/new.png</icon>
					</item>
				</highlight_scale>
				<attribute>status</attribute>
				<stimuli>
					<stimulus id="ev_error" xsi:type="StimulusInternal"/>
					<stimulus id="ev_online" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_offline" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_update" xsi:type="StimulusUserAction"/>
				</stimuli>
				<states>
					<state id="new">
						<highlight>
							<code>new</code>
						</highlight>
						<flags>
							<attribute id="org_id">
								<read_only/>
							</attribute>
							<attribute id="deployment_id">
								<read_only/>
							</attribute>
							<attribute id="person_list">
								<read_only/>
							</attribute>
							<attribute id="manage_svc">
								<read_only/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="production">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="error">
						<highlight>
							<code>warning</code>
						</highlight>
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="stock">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="change_log">
								<must_prompt/>
								<must_change/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_online">
								<target>production</target>
								<actions/>
							</transition>
						</transitions>
					</state>
				</states>
			</lifecycle>
			<methods>
				<method id="DisplayModifyForm">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[
						public function DisplayModifyForm(WebPage $oPage, $aExtraParams = array())
						{
							$sDocLink = MetaModel::GetModuleSetting('kubernetes', 'ingress_doc_url', "http://localhost/");
							$sDocLink = '<a href="' . $sDocLink . '" target="_blank">' . $sDocLink . '</a>';
							$sOnTypeChage = Dict::Format('Class:Ingress/Warning:typeChange', $sDocLink);
							$sButtonOk = Dict::S('Class:Ingress/Warning:buttonOk');
							$sButtonCancel = Dict::S('Class:Ingress/Warning:buttonCancel');
							$sWarningTitle = Dict::S('Class:Ingress/Warning:title');
							$sConformTheme = MetaModel::GetModuleSetting('kubernetes', 'confirm-theme', 'modern');
							$sConformIcon = MetaModel::GetModuleSetting('kubernetes', 'confirm-icon', '');
							$sConformWidth = MetaModel::GetModuleSetting('kubernetes', 'confirm-width', '30%');

							$sAppRoot = utils::GetAbsoluteUrlAppRoot();
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/jquery-confirm.min.js');
							$oPage->add_linked_script($sAppRoot . 'env-production/kubernetes/js/functions.js');
							$oPage->add_linked_stylesheet($sAppRoot . 'env-production/kubernetes/css/jquery-confirm.min.css');

							// 给submit类型的button添加click事件，由于form有onsubmit事件，导致click弹出确认框后立即继续执行onsubmit，
							// 所以检测到type变更之后，将submit类型的button都改为button类型，完事之后在给改回去
							// Kubernetes_IngressWarning(title, content, ok='OK', cancel='Cancel', theme='modern', icon='', width='30%')
							$oPage->add_ready_script("Kubernetes_IngressWarning('$sWarningTitle', '$sOnTypeChage', '$sButtonOk', '$sButtonCancel', '$sConformTheme', '$sConformIcon', '$sConformWidth');");
							parent::DisplayModifyForm($oPage, $aExtraParams);
						}
					]]>
					</code>
				</method>
				<method id="ComputeValues" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
					public function ComputeValues()
					{
						$app = $this->Get('applicationsolution_name');
						$namespace = $this->Get('k8snamespace_name');
						$fname = $namespace . "." . $app;
						$deploy = MetaModel::GetObjectByColumn('Deployment', 'friendlyname', $fname, false);
						if($deploy) $this->Set("deployment_id", $deploy->GetKey());

						// internal类型必须有deployment
						if($this->Get('type') == 'internal' && !$deploy) {
							$this->m_aCheckIssues[] = Dict::Format("Class:Ingress/Error:InternalServiceMustHaveDeployment", $fname, $app);
						}

						if($this->Get('type') == 'external') {
							$this->Set('manage_svc', 'yes');
						}
						// 自动填充url字段
						$protocol = "http://";
						if($this->Get('https') == "on") {
							$protocol = "https://";
						}
						$url = $protocol . $this->Get('domain_name') . $this->Get('location');
						$this->Set('url', $url);

						return parent::ComputeValues();
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	  
					public function DoCheckToWrite()
					{
						// 检查ingressannotations格式
						$validate = $this->Get('ingressannotations_list');
						foreach($validate as $val) {
							$value = $val->Get('value');
							$pattern = $val->Get('k8singressannotations_validate');
							if(!$value) {
								$value = $val->Get('k8singressannotations_default_value');
								$val->Set('value', $value);
							}
							if($pattern && !preg_match($pattern, $value)) {
								$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToIngress/Error:ValueNotValid", $pattern);
							}

							// server-snippet只允许location为/时设置
							$annotation = $val->Get('k8singressannotations_name');
							if(preg_match('/.*server-snippet$/', $annotation) && $this->Get('location') != '/') {
								$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToIngress/Error:ServerSnippetCanOnlyConfigByRootLcation", $annotation);
							}

						}

						// 检查endpoints格式
						$endpoints = $this->Get('endpoints');
						if($endpoints) {
							$endpoints = str_replace("\r\n", "\n", $endpoints);
							$ips = explode("\n", $endpoints);
							foreach($ips as $ip) {
								if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4)) {
									$this->m_aCheckIssues[] = Dict::Format("Class:Ingress/Error:InvalidIPAddress", trim($ip));
								}
							}
						}
						// external类型时必须有endpoint
						if(!$endpoints && $this->Get('type') == "external") {
							$this->m_aCheckIssues[] = Dict::Format("Class:Ingress/Error:ExternalLoadbalancerMustProvideEndpoints");
						}

						// 当ingress type变更为internal时，监听到此变化，设置manage_svc为clean，
						//清理-ingress-for-external后缀的Service，当ingress 再次更新时，aChange
						//不包含type切type为internal，manage_svc改为 no，放弃管理Service
						$aChanges = $this->ListChanges();
						$sType = $this->Get('type');
						if($sType == "internal") {
							if(array_key_exists("type", $aChanges)) {
								$this->Set('manage_svc', 'clean');
							} else {
								$this->Set('manage_svc', 'no');
							}
						}

						// k8snamespace里配置的域名后缀不允许添加ingress，防止和Deployment管理的ingress冲突
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT K8sNamespace WHERE domain!=''");
						$oSet = new DBObjectSet($oSearch, array(), array("secret_id" => $this->GetKey()));
						foreach($oSet->ToArrayOfValues() as $val) {
							$pattern = "/" . str_replace(".", "\.", $val['K8sNamespace.domain']) . "$/";
							if(preg_match($pattern, $this->Get('domain_name'))) {
								$this->m_aCheckIssues[] = Dict::Format("Class:Ingress/Error:ReservedDomainPattern", $pattern);
							}
						}

						parent::DoCheckToWrite();
					}
					]]>
					</code>
				</method>
				<method id="GetAttributeFlags" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
					{
						$sArg = array('domain_id','location','applicationsolution_id','k8snamespace_id');
						if (!$this->IsNew() && in_array($sAttCode, $sArg))
						{
							return OPT_ATT_READONLY;
						}
						else
						{
							return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
						}
					}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<default_search>
					<items>
						<item id="status">
							<rank>1</rank>
						</item>
						<item id="domain_name">
							<rank>5</rank>
						</item>
						<item id="location">
							<rank>5</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_name">
							<rank>20</rank>
						</item>
						<item id="applicationsolution_contact">
							<rank>70</rank>
						</item>
						<item id="applicationsolution_business">
							<rank>80</rank>
						</item>
						<item id="https">
							<rnak>30</rnak>
						</item>
						<item id="type">
							<rank>40</rank>
						</item>
					</items>
				</default_search>
				<details>
					<items>
						<item id="k8snamespace_id">
							<rank>3</rank>
						</item>
						<item id="deployment_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>1</rank>
						</item>
						<item id="domain_id">
							<rank>5</rank>
						</item>
						<item id="location">
							<rank>6</rank>
						</item>
						<item id="serviceport">
							<rank>7</rank>
						</item>
						<item id="type">
							<rank>9</rank>
						</item>
						<item id="https">
							<rank>10</rank>
						</item>
						<item id="status">
							<rank>5</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
						<item id="description">
							<rank>900</rank>
						</item>
						<item id="url">
							<rank>100</rank>
						</item>
						<item id="person_list">
							<rank>60</rank>
						</item>
						<item id="ingressannotations_list">
							<rank>70</rank>
						</item>
						<item id="col:col3">
							<rank>300</rank>
							<items>
								<item id="fieldset:Ingress:other">
									<rank>310</rank>
									<items>
										<item id="endpoints">
											<rank>300</rank>
										</item>
										<item id="manage_svc">
											<rank>310</rank>
										</item>
										<item id="change_log">
											<rank>320</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="type">
							<rank>1</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="deployment_id">
							<rank>16</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="domain_id">
							<rank>5</rank>
						</item>
						<item id="location">
							<rank>6</rank>
						</item>
						<item id="serviceport">
							<rank>7</rank>
						</item>
						<item id="https">
							<rank>10</rank>
						</item>
						<item id="status">
							<rank>70</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="domain_id">
							<rank>5</rank>
						</item>
						<item id="location">
							<rank>6</rank>
						</item>
						<item id="serviceport">
							<rank>7</rank>
						</item>
						<item id="https">
							<rank>10</rank>
						</item>
						<item id="type">
							<rank>50</rank>
						</item>
						<item id="status">
							<rank>70</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="Configuration" _delta="define">
			<parent>Kubernetes</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>true</abstract>
				<key_type>autoincrement</key_type>
				<db_table>configuration</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="k8snamespace_name"/>
						<attribute id="applicationsolution_name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/configuration.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="k8snamespace_id"/>
						<attribute id="applicationsolution_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="controller_id" xsi:type="AttributeExternalKey">
					<sql>controller_id</sql>
					<target_class>Controller</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="controller_name" xsi:type="AttributeExternalField">
					<extkey_attcode>controller_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
			</fields>
			<methods>
				<method id="ComputeValues" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
					public function ComputeValues()
					{
						$app = $this->Get('applicationsolution_name');
						$namespace = $this->Get('k8snamespace_name');
						$fname = $namespace . "." . $app;
						$deploy = MetaModel::GetObjectByColumn('Controller', 'friendlyname', $fname, false);
						if($deploy) $this->Set("deployment_id", $deploy->GetKey());

						return parent::ComputeValues();
					}
					]]>
					</code>
				</method>

				<method id="GetAttributeFlags" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
					{
						$sArg = array('applicationsolution_id','k8snamespace_id');
						if (!$this->IsNew() && in_array($sAttCode, $sArg))
						{
							return OPT_ATT_READONLY;
						}
						else
						{
							return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
						}
					}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="k8snamespace_id">
							<rank>3</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>1</rank>
						</item>
						<item id="status">
							<rank>70</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
						<item id="description">
							<rank>90</rank>
						</item>
						<item id="person_list">
							<rank>60</rank>
						</item>
						<item id="col:col3">
							<rank>300</rank>
							<items>
								<item id="fieldset:Configuration:other">
									<rank>310</rank>
									<items>
										<item id="change_log">
											<rank>320</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="controller_id">
							<rank>16</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="status">
							<rank>70</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="k8snamespace_id">
							<rank>10</rank>
						</item>
						<item id="controller_id">
							<rank>16</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>15</rank>
						</item>
						<item id="status">
							<rank>70</rank>
						</item>
						<item id="org_id">
							<rank>75</rank>
						</item>
						<item id="move2production">
							<rank>80</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="Secret" _delta="define">
			<parent>Configuration</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>secret</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="k8snamespace_name"/>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/secret.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="k8snamespace_id"/>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="name" xsi:type="AttributeString">
					<sql>name</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
					<validation_pattern>^[a-z][a-z1-9_]+$</validation_pattern>
				</field>
				<field id="data" xsi:type="AttributeText">
					<sql>data</sql>
					<is_null_allowed>false</is_null_allowed>
					<default_value>KEY:VALUE</default_value>
					<tracking_level>all</tracking_level>
				</field>
			</fields>
			<lifecycle>
				<highlight_scale>
					<item id="warning">
						<rank>1</rank>
						<color>HIGHLIGHT_CLASS_CRITICAL</color>
						<icon>images/error.png</icon>
					</item>
					<item id="new">
						<rank>2</rank>
						<color>HIGHLIGHT_CLASS_WARNING</color>
						<icon>images/new.png</icon>
					</item>
				</highlight_scale>
				<attribute>status</attribute>
				<stimuli>
					<stimulus id="ev_error" xsi:type="StimulusInternal"/>
					<stimulus id="ev_online" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_offline" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_update" xsi:type="StimulusUserAction"/>
				</stimuli>
				<states>
					<state id="new">
						<highlight>
							<code>new</code>
						</highlight>
						<flags>
							<attribute id="org_id">
								<read_only/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
							</attribute>
							<attribute id="data">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="production">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="data">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="error">
						<highlight>
							<code>warning</code>
						</highlight>
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="data">
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_error">
								<target>error</target>
								<actions/>
							</transition>
							<transition id="ev_update">
								<target>production</target>
								<actions/>
							</transition>
							<transition id="ev_offline">
								<target>stock</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="stock">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="data">
								<must_prompt/>
							</attribute>
							<attribute id="change_log">
								<must_prompt/>
								<must_change/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_online">
								<target>production</target>
								<actions/>
							</transition>
						</transitions>
					</state>
				</states>
			</lifecycle>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	  
					public function DoCheckToWrite()
					{
						$aChanges = $this->ListChanges();
						if(array_key_exists('status', $aChanges) && $aChanges['status'] == 'stock')
						{
							$oSearch = DBObjectSearch::FromOQL_AllData("SELECT Controller WHERE status='production' AND secret_id=:secret_id");
							$oSet = new DBObjectSet($oSearch, array(), array("secret_id" => $this->GetKey()));

							if ($oSet->Count() > 0)
							{
								$this->m_aCheckIssues[] = Dict::Format("Class:Secret/Error:NotAllowedForSomeControllerUseThisSecret", $this->GetKey());
							}
						}

						parent::DoCheckToWrite();
					}
					]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
					public function CheckToDelete(&$oDeletionPlan)
					{
						$oSearch = DBObjectSearch::FromOQL_AllData("SELECT Controller WHERE status='production' AND secret_id=:secret_id");
						$oSet = new DBObjectSet($oSearch, array(), array("secret_id" => $this->GetKey()));

						if ($oSet->Count() > 0)
						{
							// 被在线状态Controller使用的Seret不允许直接删除
							$oDeletionPlan->AddToDelete($this, null);
							$oDeletionPlan->SetDeletionIssues($this, array('有在线状态K8S控制器使用此Secret对象，不允许直接删除'), true);
							$oDeletionPlan->ComputeResults();
							return false;
						}
						return parent::CheckToDelete($oDeletionPlan);
					} 
					]]></code>
				</method>
				<method id="GetAttributeFlags" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
					{
						// 权限控制，不允许查看非自己名下的Secret
						if(!$this->IsNew() && $sAttCode != 'name') 
						{
							$myContactId = UserRights::GetContactId();
							$person_list = $this->Get('person_list');
							$contacts = array();
							foreach($person_list as $v) {
								$contacts[] = $v->Get('person_id');
							}
							if(!in_array($myContactId, $contacts) && !UserRights::IsAdministrator())
							{
								return OPT_ATT_HIDDEN;
							}
						}
						$sArg = array('name', 'applicationsolution_id', 'k8snamespace_id');
						if (!$this->IsNew() && in_array($sAttCode, $sArg))
						{
							return OPT_ATT_READONLY;
						}
						else
						{
							return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
						}
					}
					]]>
					</code>
				</method>
				<method id="DisplayBareHistory" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-iDisplay</type>
					<code><![CDATA[
					// 不允许修改组成friendlyname的属性
					public function DisplayBareHistory(WebPage $oPage, $bEditMode = false, $iLimitCount = 0, $iLimitStart = 0)
					{
						// 权限控制，不允许查看非自己名下对象的history table
						if(!$this->IsNew()) 
						{
							$myContactId = UserRights::GetContactId();
							$person_list = $this->Get('person_list');
							$contacts = array();
							foreach($person_list as $v) {
								$contacts[] = $v->Get('person_id');
							}
							if(!in_array($myContactId, $contacts) && !UserRights::IsAdministrator())
							{
								return "";
							}
						}
						return parent::DisplayBareHistory($oPage, $bEditMode, $iLimitCount, $iLimitStart);
					}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>12</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>11</rank>
						</item>
						<item id="data">
							<rank>13</rank>
						</item>
						<item id="status">
							<rank>14</rank>
						</item>
						<item id="description">
							<rank>350</rank>
						</item>
						<item id="org_id">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>50</rank>
						</item>
						<item id="person_list">
							<rank>60</rank>
						</item>
						<item id="col:col3">
							<rank>300</rank>
							<items>
								<item id="fieldset:Secret:other">
									<rank>310</rank>
									<items>
										<item id="change_log">
											<rank>320</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="applicationsolution_id">
							<rank>11</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>12</rank>
						</item>
						<item id="status">
							<rank>13</rank>
						</item>
						<item id="description">
							<rank>35</rank>
						</item>
						<item id="org_id">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>50</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="applicationsolution_id">
							<rank>10</rank>
						</item>
						<item id="k8snamespace_id">
							<rank>11</rank>
						</item>
						<item id="status">
							<rank>12</rank>
						</item>
						<item id="description">
							<rank>15</rank>
						</item>
						<item id="org_id">
							<rank>40</rank>
						</item>
						<item id="move2production">
							<rank>50</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>


		<!-- 以下是类型配置及lnk类-->
		<class id="K8sNamespace" _delta="define">
			<parent>Typology</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>k8snamespace</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="domain" xsi:type="AttributeString">
					<sql>domain</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="note" xsi:type="AttributeString">
					<sql>note</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="deployment_list" xsi:type="AttributeLinkedSet">
					<linked_class>Deployment</linked_class>
					<ext_key_to_me>k8snamespace_id</ext_key_to_me>
					<edit_mode>add_only</edit_mode>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<duplicates/>
				</field>
				<field id="ingress_list" xsi:type="AttributeLinkedSet">
					<linked_class>Ingress</linked_class>
					<ext_key_to_me>k8snamespace_id</ext_key_to_me>
					<edit_mode>add_only</edit_mode>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<duplicates/>
				</field>
			</fields>
			<methods>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="domain">
							<rank>12</rank>
						</item>
						<item id="note">
							<rank>15</rank>
						</item>
						<item id="deployment_list">
							<rank>40</rank>
						</item>
						<item id="ingress_list">
							<rank>40</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="domain">
							<rank>12</rank>
						</item>
						<item id="note">
							<rank>15</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="domain">
							<rank>12</rank>
						</item>
						<item id="note">
							<rank>15</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="K8sAffinity" _delta="define">
			<parent>Typology</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>k8saffinity</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="affinitytype" xsi:type="AttributeEnum">
					<sql>affinitytype</sql>
					<values>
						<value id="nodeaffinity">nodeaffinity</value>
						<value id="nodeantiaffinity">nodeantiaffinity</value>
						<value id="podaffinity">podaffinity</value>
						<value id="podantiaffinity">podantiaffinity</value>
					</values>
					<default_value>nodeaffinity</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="labeltype" xsi:type="AttributeEnum">
					<sql>labeltype</sql>
					<values>
						<value id="cpu">cpu</value>
						<value id="ip">ip</value>
						<value id="cluster">cluster</value>
						<value id="role">role</value>
						<value id="location">location</value>
						<value id="app">app</value>
					</values>
					<default_value>cluster</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="requiretype" xsi:type="AttributeEnum">
					<sql>requiretype</sql>
					<values>
						<value id="required">required</value>
						<value id="preferred">preferred</value>
					</values>
					<default_value>required</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="topologykey" xsi:type="AttributeEnum">
					<sql>topologykey</sql>
					<values>
						<value id="hostname">hostname</value>
						<value id="zone">zone</value>
						<value id="region">region</value>
					</values>
					<default_value>hostname</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="operator" xsi:type="AttributeEnum">
					<sql>operator</sql>
					<values>
						<value id="in">in</value>
						<value id="notin">notin</value>
						<value id="exists">exists</value>
						<value id="doesnotexist">doesnotexist</value>
						<value id="gt">gt</value>
						<value id="lt">lt</value>
					</values>
					<default_value>in</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="expressions" xsi:type="AttributeText">
					<sql>expressions</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="note" xsi:type="AttributeString">
					<sql>note</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="controller_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sAffinityToController</linked_class>
					<ext_key_to_me>k8saffinity_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>controller_id</ext_key_to_remote>
					<duplicates/>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	  
					public function DoCheckToWrite()
					{
						// 检查expression是否是yaml格式
						$yaml = $this->Get('expressions');
						if($yaml) {
							$parsed = @yaml_parse($yaml);
							if(!is_array($parsed)) {
								$this->m_aCheckIssues[] = Dict::Format("Class:K8sAffinity/Error:ExpressionsShouldBeYamlFormat", $this->Get('name'));
							}
						}

						parent::DoCheckToWrite();
					}
					]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="affinitytype">
							<rank>12</rank>
						</item>
						<item id="labeltype">
							<rank>15</rank>
						</item>
						<item id="requiretype">
							<rank>20</rank>
						</item>
						<item id="topologykey">
							<rank>25</rank>
						</item>
						<item id="operator">
							<rank>30</rank>
						</item>
						<item id="expressions">
							<rank>35</rank>
						</item>
						<item id="note">
							<rank>40</rank>
						</item>
						<item id="controller_list">
							<rank>100</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="affinitytype">
							<rank>12</rank>
						</item>
						<item id="labeltype">
							<rank>15</rank>
						</item>
						<item id="requiretype">
							<rank>20</rank>
						</item>
						<item id="topologykey">
							<rank>25</rank>
						</item>
						<item id="operator">
							<rank>30</rank>
						</item>
						<item id="note">
							<rank>40</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="affinitytype">
							<rank>12</rank>
						</item>
						<item id="labeltype">
							<rank>15</rank>
						</item>
						<item id="requiretype">
							<rank>20</rank>
						</item>
						<item id="topologykey">
							<rank>25</rank>
						</item>
						<item id="operator">
							<rank>30</rank>
						</item>
						<item id="expressions">
							<rank>35</rank>
						</item>
						<item id="note">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="K8sVolume" _delta="define">
			<parent>Typology</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>k8svolume</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="volumetype" xsi:type="AttributeEnum">
					<sql>volumetype</sql>
					<values>
						<value id="hostpath">hostpath</value>
						<value id="rbd">rbd</value>
						<value id="cephfs">cephfs</value>
						<value id="glusterfs">glusterfs</value>
					</values>
					<default_value>hostpath</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="note" xsi:type="AttributeString">
					<sql>note</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="controller_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sVolumeToController</linked_class>
					<ext_key_to_me>k8svolume_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>controller_id</ext_key_to_remote>
					<duplicates/>
				</field>
			</fields>
			<methods></methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="volumetype">
							<rank>15</rank>
						</item>
						<item id="note">
							<rank>20</rank>
						</item>
						<item id="controller_list">
							<rank>100</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="volumetype">
							<rank>12</rank>
						</item>
						<item id="note">
							<rank>40</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="volumetype">
							<rank>12</rank>
						</item>
						<item id="note">
							<rank>40</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="K8sIngressAnnotations" _delta="define">
			<parent>Typology</parent>
			<properties>
				<category>bizmodel,searchable</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>k8singressannotations</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field>finalclass</db_final_class_field>
				<naming>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</naming>
				<display_template/>
				<reconciliation>
					<attributes>
						<attribute id="name"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="enable" xsi:type="AttributeEnum">
					<sql>enable</sql>
					<values>
						<value id="yes">yes</value>
						<value id="no">no</value>
					</values>
					<default_value>yes</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="note" xsi:type="AttributeString">
					<sql>note</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="validate" xsi:type="AttributeString">
					<sql>validate</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="default_value" xsi:type="AttributeText">
					<sql>default_value</sql>
					<default_value/>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="description" xsi:type="AttributeText">
					<sql>description</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="deployment_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sIngressAnnotationsToDeployment</linked_class>
					<ext_key_to_me>k8singressannotations_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>deployment_id</ext_key_to_remote>
					<duplicates/>
				</field>
				<field id="ingress_list" xsi:type="AttributeLinkedSetIndirect">
					<linked_class>lnkK8sIngressAnnotationsToIngress</linked_class>
					<ext_key_to_me>k8singressannotations_id</ext_key_to_me>
					<count_min>0</count_min>
					<count_max>0</count_max>
					<ext_key_to_remote>ingress_id</ext_key_to_remote>
					<duplicates/>
				</field>
			</fields>
			<methods>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				// 校验default_value格式是否合法
				$value = $this->Get('default_value');
				$pattern = $this->Get('validate');
				if($pattern && !preg_match($pattern, $value)) {
					$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotations/Error:DefaultValueNotValid", $this->Get('name'));
				}
			}
		}]]>
					</code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="enable">
							<rank>13</rank>
						</item>
						<item id="note">
							<rank>15</rank>
						</item>
						<item id="validate">
							<rank>17</rank>
						</item>
						<item id="default_value">
							<rank>19</rank>
						</item>
						<item id="description">
							<rank>20</rank>
						</item>
						<item id="deployment_list">
							<rank>100</rank>
						</item>
						<item id="ingress_list">
							<rank>110</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="name">
							<rank>10</rank>
						</item>
						<item id="enable">
							<rank>13</rank>
						</item>
						<item id="note">
							<rank>20</rank>
						</item>
						<item id="validate">
							<rank>30</rank>
						</item>
						<item id="description">
							<rank>40</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="note">
							<rank>20</rank>
						</item>
						<item id="enable">
							<rank>25</rank>
						</item>
						<item id="validate">
							<rank>30</rank>
						</item>
						<item id="description">
							<rank>40</rank>
						</item>
						<item id="default_value">
							<rank>50</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="lnkPersonToKubernetes" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkpersontokubernetes</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="person_id"/>
						<attribute id="kubernetes_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="person_id"/>
						<attribute id="kubernetes_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="person_id" xsi:type="AttributeExternalKey">
					<sql>person_id</sql>
					<target_class>Person</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="person_name" xsi:type="AttributeExternalField">
					<extkey_attcode>person_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<field id="kubernetes_id" xsi:type="AttributeExternalKey">
					<sql>kubernetes_id</sql>
					<target_class>Kubernetes</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="kubernetes_name" xsi:type="AttributeExternalField">
					<extkey_attcode>kubernetes_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
			</fields>
			<methods>
				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>
				<method id="DisplayModifyForm" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[
						public function DisplayModifyForm(WebPage $oPage, $aExtraParams = array())
						{
							if(!UserRights::IsAdministrator())
							{
								$sMesg = Dict::Format("Class:lnkPersonToKubernetes/Error:NotAllowDirectCreation", get_class($this));
								if($this->IsNew())
								{
									$sMesg = $sMesg . '...<a href="'.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=modify&class=Person&id='.UserRights::GetContactId().'">'.Dict::Format("Class:lnkPersonToKubernetes/Msg:EditMySelf").'</a>';
									$oPage->add("<div class=\"header_message message_info\">$sMesg</div>\n");
								}else
								{
									self::ReloadAndDisplayCustom($oPage, $this, 'lnkpersontokubernetes-no-direct', $sMesg, 'info');
								}
							}else
							{
								parent::DisplayModifyForm($oPage, $aExtraParams);
							}
						}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			/* 允许研发编辑secret时添加删除联系人, 取消这里的检查
			$myContactId = UserRights::GetContactId();
			$thisContactId = $this->Get('person_id');
			$thisContactName = $this->Get('contact_name');
			if ($myContactId != $thisContactId && !UserRights::IsAdministrator()){
				$this->m_aCheckIssues[] = Dict::Format("Class:lnkPersonToKubernetes/Error:CanOnlyAddLinkForYourself", $thisContactName);
			}
			*/

			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				$friendlyname = $this->Get('person_id') . " " . $this->Get('kubernetes_id');
				if(!$this->IsNew())
				{
					$this->m_aCheckIssues[] = Dict::Format("Class:lnkPersonToKubernetes/Error:OnlyAddAndDeleteIsAllow", $friendlyname);
				}else
				{
					$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkPersonToKubernetes WHERE friendlyname=:friendlyname");
					$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));

					if ($oSet->Count() > 0)
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkPersonToKubernetes/Error:ThisLnkAlreadyExists", $friendlyname);
					}
				}
			}
		}]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
  	public function CheckToDelete(&$oDeletionPlan)
  	{
		$myContactId = UserRights::GetContactId();
		$thisContactId = $this->Get('person_id');
  		if ($myContactId != $thisContactId && !UserRights::IsAdministrator())
		{
			// 普通用户不允许删除非自己名下的lnkPersonToKubernetes
			$oDeletionPlan->AddToDelete($this, null);
			$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的关联'), true);
			$oDeletionPlan->ComputeResults();
			return false;
		}
		return parent::CheckToDelete($oDeletionPlan);
  	} 
			]]></code>
				</method>

			</methods>
			<presentation>
				<details>
					<items>
						<item id="kubernetes_id">
							<rank>10</rank>
						</item>
						<item id="person_id">
							<rank>20</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="kubernetes_id">
							<rank>10</rank>
						</item>
						<item id="person_id">
							<rank>20</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="kubernetes_id">
							<rank>10</rank>
						</item>
						<item id="person_id">
							<rank>20</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="lnkK8sAffinityToController" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkk8saffinitytocontroller</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="k8saffinity_id"/>
						<attribute id="controller_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="k8saffinity_id"/>
						<attribute id="controller_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="k8saffinity_id" xsi:type="AttributeExternalKey">
					<sql>k8saffinity_id</sql>
					<target_class>K8sAffinity</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="k8saffinity_name" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="k8saffinity_affinitytype" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>affinitytype</target_attcode>
				</field>
				<field id="k8saffinity_labeltype" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>labeltype</target_attcode>
				</field>
				<field id="k8saffinity_requiretype" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>requiretype</target_attcode>
				</field>
				<field id="k8saffinity_topologykey" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>topologykey</target_attcode>
				</field>
				<field id="k8saffinity_expressions" xsi:type="AttributeExternalField">
					<extkey_attcode>k8saffinity_id</extkey_attcode>
					<target_attcode>expressions</target_attcode>
				</field>
				<field id="controller_id" xsi:type="AttributeExternalKey">
					<sql>controller_id</sql>
					<target_class>Controller</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="controller_name" xsi:type="AttributeExternalField">
					<extkey_attcode>controller_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<!-- need comment for group, I had forgotten this attribute useage-->
				<field id="group" xsi:type="AttributeEnum">
					<values>
						<value id="g1">g1</value>
						<value id="g2">g2</value>
						<value id="g3">g3</value>
						<value id="g4">g4</value>
						<value id="g5">g5</value>
					</values>
					<sql>group</sql>
					<default_value>g1</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="values" xsi:type="AttributeText">
					<sql>values</sql>
					<default_value>替换表达式__VALUES值__ 请用逗号分隔</default_value>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				$friendlyname = $this->Get('k8saffinity_id') . " " . $this->Get('controller_id');
				$allowmodify = array("group", "values");
				$allow = true;
				foreach($aChanges as $key => $val) {
					if(!in_array($key, $allowmodify)) {
						$allow = false;
					}
				}

				if(!$this->IsNew())
				{
					if(!$allow) {
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sAffinityToController/Error:ModifyNotAllowed", $friendlyname);
					}
				}else
				{
					$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkK8sAffinityToController WHERE friendlyname=:friendlyname");
					$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));

					if ($oSet->Count() > 0)
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sAffinityToController/Error:ThisLnkAlreadyExists", $friendlyname);
					}
				}
			}
		}]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
  	public function CheckToDelete(&$oDeletionPlan)
  	{
		$myContactId = UserRights::GetContactId();
		$controller = MetaModel::GetObject("Controller", $this->Get('controller_id'));
		$contacts = $controller->Get('person_list');
		$flag = false;
		foreach($contacts as $k => $v) {
			if($v->Get('person_id') == $myContactId) {
				$flag = true;
				break;
			}
		}
  		if (!$flag && !UserRights::IsAdministrator())
		{
			// 普通用户不允许删除非自己名下的lnkK8sAffinityToDeployment
			$oDeletionPlan->AddToDelete($this, null);
			$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的关联'), true);
			$oDeletionPlan->ComputeResults();
			return false;
		}
		return parent::CheckToDelete($oDeletionPlan);
  	} 
					]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="group">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8saffinity_id">
							<rank>20</rank>
						</item>
						<item id="k8saffinity_affinitytype">
							<rank>25</rank>
						</item>
						<item id="k8saffinity_labeltype">
							<rank>30</rank>
						</item>
						<item id="k8saffinity_requiretype">
							<rank>35</rank>
						</item>
						<item id="k8saffinity_topologykey">
							<rank>40</rank>
						</item>
						<item id="k8saffinity_expressions">
							<rank>45</rank>
						</item>
						<item id="values">
							<rank>50</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="group">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8saffinity_id">
							<rank>20</rank>
						</item>
						<item id="k8saffinity_affinitytype">
							<rank>25</rank>
						</item>
						<item id="k8saffinity_labeltype">
							<rank>30</rank>
						</item>
						<item id="k8saffinity_requiretype">
							<rank>35</rank>
						</item>
						<item id="k8saffinity_topologykey">
							<rank>40</rank>
						</item>
						<item id="values">
							<rank>50</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="group">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8saffinity_id">
							<rank>20</rank>
						</item>
						<item id="k8saffinity_affinitytype">
							<rank>25</rank>
						</item>
						<item id="k8saffinity_labeltype">
							<rank>30</rank>
						</item>
						<item id="k8saffinity_requiretype">
							<rank>35</rank>
						</item>
						<item id="k8saffinity_topologykey">
							<rank>40</rank>
						</item>
						<item id="k8saffinity_expressions">
							<rank>45</rank>
						</item>
						<item id="values">
							<rank>50</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="lnkK8sVolumeToController" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkk8svolumetocontroller</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="k8svolume_id"/>
						<attribute id="controller_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="k8svolume_id"/>
						<attribute id="controller_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="k8svolume_id" xsi:type="AttributeExternalKey">
					<sql>k8svolume_id</sql>
					<target_class>K8sVolume</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="k8svolume_name" xsi:type="AttributeExternalField">
					<extkey_attcode>k8svolume_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="k8svolume_type" xsi:type="AttributeExternalField">
					<extkey_attcode>k8svolume_id</extkey_attcode>
					<target_attcode>volumetype</target_attcode>
				</field>
				<field id="k8svolume_note" xsi:type="AttributeExternalField">
					<extkey_attcode>k8svolume_id</extkey_attcode>
					<target_attcode>note</target_attcode>
				</field>
				<field id="controller_id" xsi:type="AttributeExternalKey">
					<sql>controller_id</sql>
					<target_class>Controller</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="controller_name" xsi:type="AttributeExternalField">
					<extkey_attcode>controller_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<field id="mountpath" xsi:type="AttributeString">
					<sql>mountpath</sql>
					<default_value>/mnt</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
			</fields>
			<methods>
				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				$friendlyname = $this->Get('k8svolume_id') . " " . $this->Get('controller_id');
				$allowmodify = array("mountpath");
				$allow = true;
				foreach($aChanges as $key => $val) {
					if(!in_array($key, $allowmodify)) {
						$allow = false;
					}
				}

				if(!$this->IsNew())
				{
					if(!$allow) {
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sVolumeToController/Error:ModifyNotAllowed", $friendlyname);
					}
				}else
				{
					$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkK8sVolumeToController WHERE friendlyname=:friendlyname");
					$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));

					if ($oSet->Count() > 0)
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sVolumeToController/Error:ThisLnkAlreadyExists", $friendlyname);
					}
				}
			}
		}]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
  	public function CheckToDelete(&$oDeletionPlan)
  	{
		$myContactId = UserRights::GetContactId();
		$deploy = MetaModel::GetObject("Controller", $this->Get('controller_id'));
		$contacts = $deploy->Get('person_list');
		$flag = false;
		foreach($contacts as $v) {
			if($v->Get('person_id') == $myContactId) {
				$flag = true;
				break;
			}
		}
  		if (!$flag && !UserRights::IsAdministrator())
		{
			// 普通用户不允许删除非自己名下的lnkK8sVolumeToDeployment
			$oDeletionPlan->AddToDelete($this, null);
			$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的关联'), true);
			$oDeletionPlan->ComputeResults();
			return false;
		}
		return parent::CheckToDelete($oDeletionPlan);
  	} 
					]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="mountpath">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8svolume_id">
							<rank>20</rank>
						</item>
						<item id="k8svolume_name">
							<rank>25</rank>
						</item>
						<item id="k8svolume_type">
							<rank>30</rank>
						</item>
						<item id="k8svolume_note">
							<rank>35</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="mountpath">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8svolume_id">
							<rank>20</rank>
						</item>
						<item id="k8svolume_name">
							<rank>25</rank>
						</item>
						<item id="k8svolume_type">
							<rank>30</rank>
						</item>
						<item id="k8svolume_note">
							<rank>35</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="mountpath">
							<rank>5</rank>
						</item>
						<item id="controller_id">
							<rank>10</rank>
						</item>
						<item id="k8svolume_id">
							<rank>20</rank>
						</item>
						<item id="k8svolume_type">
							<rank>30</rank>
						</item>
						<item id="k8svolume_note">
							<rank>35</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>

		<class id="lnkK8sIngressAnnotationsToDeployment" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkk8singressannotationstodeployment</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="k8singressannotations_id"/>
						<attribute id="deployment_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="k8singressannotations_id"/>
						<attribute id="deployment_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="k8singressannotations_id" xsi:type="AttributeExternalKey">
					<sql>k8singressannotations_id</sql>
					<target_class>K8sIngressAnnotations</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="k8singressannotations_name" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="enable" xsi:type="AttributeEnum">
					<sql>enable</sql>
					<values>
						<value id="yes">yes</value>
						<value id="no">no</value>
					</values>
					<default_value>yes</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="k8singressannotations_note" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>note</target_attcode>
				</field>
				<field id="k8singressannotations_validate" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>validate</target_attcode>
				</field>
				<field id="k8singressannotations_description" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>description</target_attcode>
				</field>
				<field id="k8singressannotations_default_value" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>default_value</target_attcode>
				</field>
				<field id="deployment_id" xsi:type="AttributeExternalKey">
					<sql>deployment_id</sql>
					<target_class>Deployment</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="deployment_name" xsi:type="AttributeExternalField">
					<extkey_attcode>deployment_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<field id="value" xsi:type="AttributeText">
					<sql>value</sql>
					<default_value></default_value>
					<is_null_allowed>true</is_null_allowed>
					<width>200px</width>
					<height>50px</height>
				</field>
			</fields>
			<methods>
				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				$friendlyname = $this->Get('k8singressannotations_id') . " " . $this->Get('deployment_id');
				$allowmodify = array("value","enable");
				$allow = true;
				foreach($aChanges as $key => $val) {
					if(!in_array($key, $allowmodify)) {
						$allow = false;
					}
				}

				if(!$this->IsNew())
				{
					if(!$allow) {
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToDeployment/Error:ModifyNotAllowed", $friendlyname);
					} else {
						// 校验value格式是否合法
						$value = $this->Get('value');
						// 允许value为空，为空时自动设置为default_value的值
						if(!$value) {
							$value = $this->Get('k8singressannotations_default_value');
							$this->Set('value', $value);
						}
						$pattern = $this->Get('k8singressannotations_validate');
						if($pattern && !preg_match($pattern, $value)) {
							$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToDeployment/Error:ValueNotValid", $friendlyname);
						}
					}
				}else
				{
					$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkK8sIngressAnnotationsToDeployment WHERE friendlyname=:friendlyname");
					$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));

					if ($oSet->Count() > 0)
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToDeployment/Error:ThisLnkAlreadyExists", $friendlyname);
					}
				}
			}
		}]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
  	public function CheckToDelete(&$oDeletionPlan)
  	{
		$myContactId = UserRights::GetContactId();
		$deploy = MetaModel::GetObject("Deployment", $this->Get('deployment_id'));
		$contacts = $deploy->Get('person_list');
		$flag = false;
		foreach($contacts as $v) {
			if($v->Get('person_id') == $myContactId) {
				$flag = true;
				break;
			}
		}
  		if (!$flag && !UserRights::IsAdministrator())
		{
			// 普通用户不允许删除非自己名下的lnkK8sIngressAnnotationsToDeployment
			$oDeletionPlan->AddToDelete($this, null);
			$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的关联'), true);
			$oDeletionPlan->ComputeResults();
			return false;
		}
		return parent::CheckToDelete($oDeletionPlan);
  	} 
					]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="enable">
							<rank>3</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="deployment_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_name">
							<rank>25</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>30</rank>
						</item>
						<item id="k8singressannotations_validate">
							<rank>32</rank>
						</item>
						<item id="k8singressannotations_description">
							<rank>35</rank>
						</item>
						<item id="k8singressannotations_default_value">
							<rank>40</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="enable">
							<rank>3</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="deployment_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_name">
							<rank>25</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>30</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="enable">
							<rank>3</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="deployment_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>35</rank>
						</item>
						<item id="k8singressannotations_validate">
							<rank>40</rank>
						</item>
						<item id="k8singressannotations_default_value">
							<rank>50</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
		<class id="lnkK8sIngressAnnotationsToIngress" _delta="define">
			<parent>cmdbAbstractObject</parent>
			<properties>
				<is_link>1</is_link>
				<category>bizmodel</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>lnkk8singressannotationstoingress</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="k8singressannotations_id"/>
						<attribute id="ingress_id"/>
					</attributes>
				</naming>
				<display_template/>
				<icon/>
				<reconciliation>
					<attributes>
						<attribute id="k8singressannotations_id"/>
						<attribute id="ingress_id"/>
					</attributes>
				</reconciliation>
			</properties>
			<fields>
				<field id="k8singressannotations_id" xsi:type="AttributeExternalKey">
					<sql>k8singressannotations_id</sql>
					<target_class>K8sIngressAnnotations</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="k8singressannotations_name" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="enable" xsi:type="AttributeEnum">
					<sql>enable</sql>
					<values>
						<value id="yes">yes</value>
						<value id="no">no</value>
					</values>
					<default_value>yes</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="k8singressannotations_note" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>note</target_attcode>
				</field>
				<field id="k8singressannotations_validate" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>validate</target_attcode>
				</field>
				<field id="k8singressannotations_description" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>description</target_attcode>
				</field>
				<field id="k8singressannotations_default_value" xsi:type="AttributeExternalField">
					<extkey_attcode>k8singressannotations_id</extkey_attcode>
					<target_attcode>default_value</target_attcode>
				</field>
				<field id="ingress_id" xsi:type="AttributeExternalKey">
					<sql>ingress_id</sql>
					<target_class>Ingress</target_class>
					<is_null_allowed>false</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
				</field>
				<field id="ingress_name" xsi:type="AttributeExternalField">
					<extkey_attcode>ingress_id</extkey_attcode>
					<target_attcode>friendlyname</target_attcode>
				</field>
				<field id="value" xsi:type="AttributeText">
					<sql>value</sql>
					<default_value></default_value>
					<is_null_allowed>true</is_null_allowed>
					<width>200px</width>
					<height>50px</height>
				</field>
			</fields>
			<methods>
				<method id="ReloadAndDisplayCustom" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Custom</type>
					<code><![CDATA[
					function ReloadAndDisplayCustom($oPage, $oObj, $sMessageId = '', $sMessage = '', $sSeverity = null)
					{
						$oAppContext = new ApplicationContext();
						if ($sMessageId != '')
						{
							cmdbAbstractObject::SetSessionMessage(get_class($oObj), $oObj->GetKey(), $sMessageId, $sMessage, $sSeverity, 0, true /* must not exist */);
						}

						$oId = $oObj->getKey();
						$oPage->add_header('Location: '.utils::GetAbsoluteUrlAppRoot().'pages/UI.php?operation=details&class='.get_class($oObj).'&id='.$oId.'&'.$oAppContext->GetForLink());
					}
					]]>
					</code>
				</method>
				<method id="DoCheckToWrite" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[  public function DoCheckToWrite(){
			$aChanges = $this->ListChanges();
			if($aChanges)
			{
				$friendlyname = $this->Get('k8singressannotations_id') . " " . $this->Get('ingress_id');
				$allowmodify = array("value","enable");
				$allow = true;
				foreach($aChanges as $key => $val) {
					if(!in_array($key, $allowmodify)) {
						$allow = false;
					}
				}

				if(!$this->IsNew())
				{
					if(!$allow) {
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToIngress/Error:ModifyNotAllowed", $friendlyname);
					} else {
						// 校验value格式是否合法
						$value = $this->Get('value');
						// 允许value为空，为空时自动设置为default_value的值
						if(!$value) {
							$value = $this->Get('k8singressannotations_default_value');
							$this->Set('value', $value);
						}
						$pattern = $this->Get('k8singressannotations_validate');
						if($pattern && !preg_match($pattern, $value)) {
							$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToIngress/Error:ValueNotValid", $friendlyname);
						}
					}
				}else
				{
					$oSearch = DBObjectSearch::FromOQL_AllData("SELECT lnkK8sIngressAnnotationsToIngress WHERE friendlyname=:friendlyname");
					$oSet = new DBObjectSet($oSearch, array(), array("friendlyname" => $friendlyname));

					if ($oSet->Count() > 0)
					{
						$this->m_aCheckIssues[] = Dict::Format("Class:lnkK8sIngressAnnotationsToIngress/Error:ThisLnkAlreadyExists", $friendlyname);
					}
				}
			}
		}]]>
					</code>
				</method>
				<method id="CheckToDelete" _delta="define">
					<static>false</static>
					<access>protected</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[	   
  	public function CheckToDelete(&$oDeletionPlan)
  	{
		$myContactId = UserRights::GetContactId();
		$deploy = MetaModel::GetObject("Ingress", $this->Get('ingress_id'));
		$contacts = $deploy->Get('person_list');
		$flag = false;
		foreach($contacts as $v) {
			if($v->Get('person_id') == $myContactId) {
				$flag = true;
				break;
			}
		}
  		if (!$flag && !UserRights::IsAdministrator())
		{
			// 普通用户不允许删除非自己名下的lnkK8sIngressAnnotationsToIngress
			$oDeletionPlan->AddToDelete($this, null);
			$oDeletionPlan->SetDeletionIssues($this, array('只能删除自己名下的关联'), true);
			$oDeletionPlan->ComputeResults();
			return false;
		}
		return parent::CheckToDelete($oDeletionPlan);
  	} 
					]]></code>
				</method>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="enable">
							<rank>2</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="ingress_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_name">
							<rank>25</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>30</rank>
						</item>
						<item id="k8singressannotations_validate">
							<rank>32</rank>
						</item>
						<item id="k8singressannotations_description">
							<rank>35</rank>
						</item>
						<item id="k8singressannotations_default_value">
							<rank>40</rank>
						</item>
					</items>
				</details>
				<search>
					<items>
						<item id="enable">
							<rank>3</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="ingress_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_name">
							<rank>25</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>30</rank>
						</item>
					</items>
				</search>
				<list>
					<items>
						<item id="enable">
							<rank>3</rank>
						</item>
						<item id="value">
							<rank>5</rank>
						</item>
						<item id="ingress_id">
							<rank>10</rank>
						</item>
						<item id="k8singressannotations_id">
							<rank>20</rank>
						</item>
						<item id="k8singressannotations_note">
							<rank>35</rank>
						</item>
						<item id="k8singressannotations_validate">
							<rank>40</rank>
						</item>
						<item id="k8singressannotations_default_value">
							<rank>50</rank>
						</item>
					</items>
				</list>
			</presentation>
		</class>
	</classes>
	<menus>
		<menu id="Kubernetes" xsi:type="MenuGroup" _delta="define">
		  <rank>21</rank>
		</menu>
		<menu id="Controller" xsi:type="OQLMenuNode" _delta="define">
			<rank>5</rank>
			<parent>Kubernetes</parent>
			<oql>SELECT Controller</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Deployment" xsi:type="OQLMenuNode" _delta="define">
			<rank>10</rank>
			<parent>Controller</parent>
			<oql>SELECT Deployment AS d JOIN ApplicationSolution AS app ON d.applicationsolution_id=app.id JOIN lnkContactToApplicationSolution AS l ON l.applicationsolution_id=app.id WHERE d.status!='stock' AND l.contact_id=:current_contact_id AND d.applicationsolution_name!='' AND d.applicationsolution_contact!='' AND d.friendlyname!=''</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Configuration" xsi:type="OQLMenuNode" _delta="define">
			<rank>20</rank>
			<parent>Kubernetes</parent>
			<oql>SELECT Configuration</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Ingress" xsi:type="OQLMenuNode" _delta="define">
			<rank>25</rank>
			<parent>Kubernetes</parent>
			<oql>SELECT Ingress AS d JOIN ApplicationSolution AS app ON d.applicationsolution_id=app.id JOIN lnkContactToApplicationSolution AS l ON l.applicationsolution_id=app.id WHERE d.status!='stock' AND d.domain_name!='' AND location!='' AND l.contact_id=:current_contact_id</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Secret" xsi:type="OQLMenuNode" _delta="define">
			<rank>30</rank>
			<parent>Configuration</parent>
			<oql>SELECT Secret AS s JOIN lnkPersonToKubernetes AS l ON l.kubernetes_id=s.id WHERE l.person_id = :current_contact_id</oql>
			<do_search>1</do_search>
		</menu>
		<menu id="Typology" xsi:type="DashboardMenuNode">
			<definition>
				<cells>
					<cell id="10" _delta="define">
						<rank>10</rank>
						<dashlets>
							<dashlet id="k8s" xsi:type="DashletHeaderStatic" _delta="define">
								<rank>0</rank>
								<title>Menu:KubernetesTypology</title>
								<icon>kubernetes/images/deployment.png</icon>
							</dashlet>
							<dashlet id="k8snamespace" xsi:type="DashletBadge" _delta="define">
								<rank>9</rank>
								<class>K8sNamespace</class>
							</dashlet>
							<dashlet id="k8saffinity" xsi:type="DashletBadge" _delta="define">
								<rank>10</rank>
								<class>K8sAffinity</class>
							</dashlet>
							<dashlet id="k8svolume" xsi:type="DashletBadge" _delta="define">
								<rank>10</rank>
								<class>K8sVolume</class>
							</dashlet>
							<dashlet id="k8singressannotations" xsi:type="DashletBadge" _delta="define">
								<rank>10</rank>
								<class>K8sIngressAnnotations</class>
							</dashlet>
						</dashlets>
					</cell>
				</cells>
			</definition>
		</menu>
	</menus>
	<user_rights>
		<groups>
			<group id="KubeController" _delta="define">
				<classes>
					<class id="Controller"/>
					<class id="Deployment"/>
					<class id="Ingress"/>
				</classes>
			</group>
			<group id="KubeConfiguration" _delta="define">
				<classes>
					<class id="Configuration"/>
					<class id="Secret"/>
				</classes>
			</group>
			<group id="Kubelnk" _delta="define">
				<classes>
					<class id="lnkPersonToKubernetes"/>
					<class id="lnkK8sAffinityToController"/>
					<class id="lnkK8sVolumeToController"/>
					<class id="lnkK8sIngressAnnotationsToDeployment"/>
					<class id="lnkK8sIngressAnnotationsToIngress"/>
				</classes>
			</group>
		</groups>
		<profiles>
			<profile id="102">
				<groups>
					<group id="KubeController" _delta="define">
						<actions>
							<action id="action:write">allow</action>
							<action id="action:bulk write">allow</action>
							<action id="stimulus:ev_new">allow</action>
							<action id="stimulus:ev_online">allow</action>
							<action id="stimulus:ev_offline">allow</action>
							<action id="stimulus:ev_redeploy">allow</action>
							<action id="stimulus:ev_redeploy2">allow</action>
							<action id="action:delete">allow</action>
						</actions>
					</group>
					<group id="KubeConfiguration" _delta="define">
						<actions>
							<action id="action:bulk read">deny</action>
							<action id="action:write">allow</action>
							<action id="action:bulk write">allow</action>
							<action id="stimulus:ev_new">allow</action>
							<action id="stimulus:ev_online">allow</action>
							<action id="stimulus:ev_offline">allow</action>
							<action id="action:delete">allow</action>
						</actions>
					</group>
					<group id="Kubelnk" _delta="define">
						<actions>
							<action id="action:write">allow</action>
							<action id="action:bulk write">allow</action>
							<action id="action:delete">allow</action>
						</actions>
					</group>
				</groups>
			</profile>
		</profiles>
	</user_rights>
</itop_design>
